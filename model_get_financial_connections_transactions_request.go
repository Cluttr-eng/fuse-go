/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetFinancialConnectionsTransactionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFinancialConnectionsTransactionsRequest{}

// GetFinancialConnectionsTransactionsRequest struct for GetFinancialConnectionsTransactionsRequest
type GetFinancialConnectionsTransactionsRequest struct {
	// Access token for authentication.
	AccessToken string `json:"access_token"`
	// The earliest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
	StartDate string `json:"start_date"`
	// The latest date for which data should be returned. Dates should be formatted as YYYY-MM-DD.
	EndDate string `json:"end_date"`
	// Specify current page.
	Page int32 `json:"page"`
	// Number of items per page.
	RecordsPerPage int32 `json:"records_per_page"`
}

type _GetFinancialConnectionsTransactionsRequest GetFinancialConnectionsTransactionsRequest

// NewGetFinancialConnectionsTransactionsRequest instantiates a new GetFinancialConnectionsTransactionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFinancialConnectionsTransactionsRequest(accessToken string, startDate string, endDate string, page int32, recordsPerPage int32) *GetFinancialConnectionsTransactionsRequest {
	this := GetFinancialConnectionsTransactionsRequest{}
	this.AccessToken = accessToken
	this.StartDate = startDate
	this.EndDate = endDate
	this.Page = page
	this.RecordsPerPage = recordsPerPage
	return &this
}

// NewGetFinancialConnectionsTransactionsRequestWithDefaults instantiates a new GetFinancialConnectionsTransactionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFinancialConnectionsTransactionsRequestWithDefaults() *GetFinancialConnectionsTransactionsRequest {
	this := GetFinancialConnectionsTransactionsRequest{}
	var recordsPerPage int32 = 25
	this.RecordsPerPage = recordsPerPage
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *GetFinancialConnectionsTransactionsRequest) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *GetFinancialConnectionsTransactionsRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *GetFinancialConnectionsTransactionsRequest) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetStartDate returns the StartDate field value
func (o *GetFinancialConnectionsTransactionsRequest) GetStartDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *GetFinancialConnectionsTransactionsRequest) GetStartDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *GetFinancialConnectionsTransactionsRequest) SetStartDate(v string) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *GetFinancialConnectionsTransactionsRequest) GetEndDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *GetFinancialConnectionsTransactionsRequest) GetEndDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *GetFinancialConnectionsTransactionsRequest) SetEndDate(v string) {
	o.EndDate = v
}

// GetPage returns the Page field value
func (o *GetFinancialConnectionsTransactionsRequest) GetPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *GetFinancialConnectionsTransactionsRequest) GetPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *GetFinancialConnectionsTransactionsRequest) SetPage(v int32) {
	o.Page = v
}

// GetRecordsPerPage returns the RecordsPerPage field value
func (o *GetFinancialConnectionsTransactionsRequest) GetRecordsPerPage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RecordsPerPage
}

// GetRecordsPerPageOk returns a tuple with the RecordsPerPage field value
// and a boolean to check if the value has been set.
func (o *GetFinancialConnectionsTransactionsRequest) GetRecordsPerPageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordsPerPage, true
}

// SetRecordsPerPage sets field value
func (o *GetFinancialConnectionsTransactionsRequest) SetRecordsPerPage(v int32) {
	o.RecordsPerPage = v
}

func (o GetFinancialConnectionsTransactionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFinancialConnectionsTransactionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token"] = o.AccessToken
	toSerialize["start_date"] = o.StartDate
	toSerialize["end_date"] = o.EndDate
	toSerialize["page"] = o.Page
	toSerialize["records_per_page"] = o.RecordsPerPage
	return toSerialize, nil
}

func (o *GetFinancialConnectionsTransactionsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_token",
		"start_date",
		"end_date",
		"page",
		"records_per_page",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetFinancialConnectionsTransactionsRequest := _GetFinancialConnectionsTransactionsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetFinancialConnectionsTransactionsRequest)

	if err != nil {
		return err
	}

	*o = GetFinancialConnectionsTransactionsRequest(varGetFinancialConnectionsTransactionsRequest)

	return err
}

type NullableGetFinancialConnectionsTransactionsRequest struct {
	value *GetFinancialConnectionsTransactionsRequest
	isSet bool
}

func (v NullableGetFinancialConnectionsTransactionsRequest) Get() *GetFinancialConnectionsTransactionsRequest {
	return v.value
}

func (v *NullableGetFinancialConnectionsTransactionsRequest) Set(val *GetFinancialConnectionsTransactionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFinancialConnectionsTransactionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFinancialConnectionsTransactionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFinancialConnectionsTransactionsRequest(val *GetFinancialConnectionsTransactionsRequest) *NullableGetFinancialConnectionsTransactionsRequest {
	return &NullableGetFinancialConnectionsTransactionsRequest{value: val, isSet: true}
}

func (v NullableGetFinancialConnectionsTransactionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFinancialConnectionsTransactionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


