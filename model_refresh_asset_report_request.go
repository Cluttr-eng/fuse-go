/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RefreshAssetReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RefreshAssetReportRequest{}

// RefreshAssetReportRequest struct for RefreshAssetReportRequest
type RefreshAssetReportRequest struct {
	// Access fuse token corresponding to the financial account to be refresh the Asset Report for.
	AccessToken string `json:"access_token"`
	// The asset_report_token returned by the original call to /asset_report/create
	AssetReportToken string `json:"asset_report_token"`
	// The maximum integer number of days of history to include in the Asset Report
	DaysRequested *float32 `json:"days_requested,omitempty"`
}

type _RefreshAssetReportRequest RefreshAssetReportRequest

// NewRefreshAssetReportRequest instantiates a new RefreshAssetReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRefreshAssetReportRequest(accessToken string, assetReportToken string) *RefreshAssetReportRequest {
	this := RefreshAssetReportRequest{}
	this.AccessToken = accessToken
	this.AssetReportToken = assetReportToken
	return &this
}

// NewRefreshAssetReportRequestWithDefaults instantiates a new RefreshAssetReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRefreshAssetReportRequestWithDefaults() *RefreshAssetReportRequest {
	this := RefreshAssetReportRequest{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *RefreshAssetReportRequest) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *RefreshAssetReportRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *RefreshAssetReportRequest) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetAssetReportToken returns the AssetReportToken field value
func (o *RefreshAssetReportRequest) GetAssetReportToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetReportToken
}

// GetAssetReportTokenOk returns a tuple with the AssetReportToken field value
// and a boolean to check if the value has been set.
func (o *RefreshAssetReportRequest) GetAssetReportTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetReportToken, true
}

// SetAssetReportToken sets field value
func (o *RefreshAssetReportRequest) SetAssetReportToken(v string) {
	o.AssetReportToken = v
}

// GetDaysRequested returns the DaysRequested field value if set, zero value otherwise.
func (o *RefreshAssetReportRequest) GetDaysRequested() float32 {
	if o == nil || IsNil(o.DaysRequested) {
		var ret float32
		return ret
	}
	return *o.DaysRequested
}

// GetDaysRequestedOk returns a tuple with the DaysRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RefreshAssetReportRequest) GetDaysRequestedOk() (*float32, bool) {
	if o == nil || IsNil(o.DaysRequested) {
		return nil, false
	}
	return o.DaysRequested, true
}

// HasDaysRequested returns a boolean if a field has been set.
func (o *RefreshAssetReportRequest) HasDaysRequested() bool {
	if o != nil && !IsNil(o.DaysRequested) {
		return true
	}

	return false
}

// SetDaysRequested gets a reference to the given float32 and assigns it to the DaysRequested field.
func (o *RefreshAssetReportRequest) SetDaysRequested(v float32) {
	o.DaysRequested = &v
}

func (o RefreshAssetReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RefreshAssetReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token"] = o.AccessToken
	toSerialize["asset_report_token"] = o.AssetReportToken
	if !IsNil(o.DaysRequested) {
		toSerialize["days_requested"] = o.DaysRequested
	}
	return toSerialize, nil
}

func (o *RefreshAssetReportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_token",
		"asset_report_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRefreshAssetReportRequest := _RefreshAssetReportRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRefreshAssetReportRequest)

	if err != nil {
		return err
	}

	*o = RefreshAssetReportRequest(varRefreshAssetReportRequest)

	return err
}

type NullableRefreshAssetReportRequest struct {
	value *RefreshAssetReportRequest
	isSet bool
}

func (v NullableRefreshAssetReportRequest) Get() *RefreshAssetReportRequest {
	return v.value
}

func (v *NullableRefreshAssetReportRequest) Set(val *RefreshAssetReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRefreshAssetReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRefreshAssetReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRefreshAssetReportRequest(val *RefreshAssetReportRequest) *NullableRefreshAssetReportRequest {
	return &NullableRefreshAssetReportRequest{value: val, isSet: true}
}

func (v NullableRefreshAssetReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRefreshAssetReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


