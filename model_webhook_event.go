/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookEvent{}

// WebhookEvent struct for WebhookEvent
type WebhookEvent struct {
	Type WebhookType `json:"type"`
	// Financial connection id associated with the webhook
	FinancialConnectionId string `json:"financial_connection_id"`
	Environment string `json:"environment"`
	Source WebhookSource `json:"source"`
	// Aggregator verification data needed to verify the webhook
	VerificationToken *string `json:"verification_token,omitempty"`
	// Exists for assets.report_ready webhooks
	AssetReportId *string `json:"asset_report_id,omitempty"`
	// Exists for transactions.updates webhooks. Indicates if historical transaction information (up to 24 months) is ready to be queried.
	HistoricalTransactionsAvailable *bool `json:"historical_transactions_available,omitempty"`
	// Exists for transactions.updates webhooks. Currently only supported by Plaid.
	RemovedTransactionIds []string `json:"removed_transaction_ids,omitempty"`
	RemoteData interface{} `json:"remote_data"`
}

type _WebhookEvent WebhookEvent

// NewWebhookEvent instantiates a new WebhookEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookEvent(type_ WebhookType, financialConnectionId string, environment string, source WebhookSource, remoteData interface{}) *WebhookEvent {
	this := WebhookEvent{}
	this.Type = type_
	this.FinancialConnectionId = financialConnectionId
	this.Environment = environment
	this.Source = source
	this.RemoteData = remoteData
	return &this
}

// NewWebhookEventWithDefaults instantiates a new WebhookEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookEventWithDefaults() *WebhookEvent {
	this := WebhookEvent{}
	return &this
}

// GetType returns the Type field value
func (o *WebhookEvent) GetType() WebhookType {
	if o == nil {
		var ret WebhookType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WebhookEvent) GetTypeOk() (*WebhookType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WebhookEvent) SetType(v WebhookType) {
	o.Type = v
}

// GetFinancialConnectionId returns the FinancialConnectionId field value
func (o *WebhookEvent) GetFinancialConnectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FinancialConnectionId
}

// GetFinancialConnectionIdOk returns a tuple with the FinancialConnectionId field value
// and a boolean to check if the value has been set.
func (o *WebhookEvent) GetFinancialConnectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinancialConnectionId, true
}

// SetFinancialConnectionId sets field value
func (o *WebhookEvent) SetFinancialConnectionId(v string) {
	o.FinancialConnectionId = v
}

// GetEnvironment returns the Environment field value
func (o *WebhookEvent) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *WebhookEvent) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *WebhookEvent) SetEnvironment(v string) {
	o.Environment = v
}

// GetSource returns the Source field value
func (o *WebhookEvent) GetSource() WebhookSource {
	if o == nil {
		var ret WebhookSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *WebhookEvent) GetSourceOk() (*WebhookSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *WebhookEvent) SetSource(v WebhookSource) {
	o.Source = v
}

// GetVerificationToken returns the VerificationToken field value if set, zero value otherwise.
func (o *WebhookEvent) GetVerificationToken() string {
	if o == nil || IsNil(o.VerificationToken) {
		var ret string
		return ret
	}
	return *o.VerificationToken
}

// GetVerificationTokenOk returns a tuple with the VerificationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvent) GetVerificationTokenOk() (*string, bool) {
	if o == nil || IsNil(o.VerificationToken) {
		return nil, false
	}
	return o.VerificationToken, true
}

// HasVerificationToken returns a boolean if a field has been set.
func (o *WebhookEvent) HasVerificationToken() bool {
	if o != nil && !IsNil(o.VerificationToken) {
		return true
	}

	return false
}

// SetVerificationToken gets a reference to the given string and assigns it to the VerificationToken field.
func (o *WebhookEvent) SetVerificationToken(v string) {
	o.VerificationToken = &v
}

// GetAssetReportId returns the AssetReportId field value if set, zero value otherwise.
func (o *WebhookEvent) GetAssetReportId() string {
	if o == nil || IsNil(o.AssetReportId) {
		var ret string
		return ret
	}
	return *o.AssetReportId
}

// GetAssetReportIdOk returns a tuple with the AssetReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvent) GetAssetReportIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssetReportId) {
		return nil, false
	}
	return o.AssetReportId, true
}

// HasAssetReportId returns a boolean if a field has been set.
func (o *WebhookEvent) HasAssetReportId() bool {
	if o != nil && !IsNil(o.AssetReportId) {
		return true
	}

	return false
}

// SetAssetReportId gets a reference to the given string and assigns it to the AssetReportId field.
func (o *WebhookEvent) SetAssetReportId(v string) {
	o.AssetReportId = &v
}

// GetHistoricalTransactionsAvailable returns the HistoricalTransactionsAvailable field value if set, zero value otherwise.
func (o *WebhookEvent) GetHistoricalTransactionsAvailable() bool {
	if o == nil || IsNil(o.HistoricalTransactionsAvailable) {
		var ret bool
		return ret
	}
	return *o.HistoricalTransactionsAvailable
}

// GetHistoricalTransactionsAvailableOk returns a tuple with the HistoricalTransactionsAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvent) GetHistoricalTransactionsAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.HistoricalTransactionsAvailable) {
		return nil, false
	}
	return o.HistoricalTransactionsAvailable, true
}

// HasHistoricalTransactionsAvailable returns a boolean if a field has been set.
func (o *WebhookEvent) HasHistoricalTransactionsAvailable() bool {
	if o != nil && !IsNil(o.HistoricalTransactionsAvailable) {
		return true
	}

	return false
}

// SetHistoricalTransactionsAvailable gets a reference to the given bool and assigns it to the HistoricalTransactionsAvailable field.
func (o *WebhookEvent) SetHistoricalTransactionsAvailable(v bool) {
	o.HistoricalTransactionsAvailable = &v
}

// GetRemovedTransactionIds returns the RemovedTransactionIds field value if set, zero value otherwise.
func (o *WebhookEvent) GetRemovedTransactionIds() []string {
	if o == nil || IsNil(o.RemovedTransactionIds) {
		var ret []string
		return ret
	}
	return o.RemovedTransactionIds
}

// GetRemovedTransactionIdsOk returns a tuple with the RemovedTransactionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookEvent) GetRemovedTransactionIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RemovedTransactionIds) {
		return nil, false
	}
	return o.RemovedTransactionIds, true
}

// HasRemovedTransactionIds returns a boolean if a field has been set.
func (o *WebhookEvent) HasRemovedTransactionIds() bool {
	if o != nil && !IsNil(o.RemovedTransactionIds) {
		return true
	}

	return false
}

// SetRemovedTransactionIds gets a reference to the given []string and assigns it to the RemovedTransactionIds field.
func (o *WebhookEvent) SetRemovedTransactionIds(v []string) {
	o.RemovedTransactionIds = v
}

// GetRemoteData returns the RemoteData field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *WebhookEvent) GetRemoteData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.RemoteData
}

// GetRemoteDataOk returns a tuple with the RemoteData field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookEvent) GetRemoteDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RemoteData) {
		return nil, false
	}
	return &o.RemoteData, true
}

// SetRemoteData sets field value
func (o *WebhookEvent) SetRemoteData(v interface{}) {
	o.RemoteData = v
}

func (o WebhookEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["financial_connection_id"] = o.FinancialConnectionId
	toSerialize["environment"] = o.Environment
	toSerialize["source"] = o.Source
	if !IsNil(o.VerificationToken) {
		toSerialize["verification_token"] = o.VerificationToken
	}
	if !IsNil(o.AssetReportId) {
		toSerialize["asset_report_id"] = o.AssetReportId
	}
	if !IsNil(o.HistoricalTransactionsAvailable) {
		toSerialize["historical_transactions_available"] = o.HistoricalTransactionsAvailable
	}
	if !IsNil(o.RemovedTransactionIds) {
		toSerialize["removed_transaction_ids"] = o.RemovedTransactionIds
	}
	if o.RemoteData != nil {
		toSerialize["remote_data"] = o.RemoteData
	}
	return toSerialize, nil
}

func (o *WebhookEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"financial_connection_id",
		"environment",
		"source",
		"remote_data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookEvent := _WebhookEvent{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookEvent)

	if err != nil {
		return err
	}

	*o = WebhookEvent(varWebhookEvent)

	return err
}

type NullableWebhookEvent struct {
	value *WebhookEvent
	isSet bool
}

func (v NullableWebhookEvent) Get() *WebhookEvent {
	return v.value
}

func (v *NullableWebhookEvent) Set(val *WebhookEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookEvent(val *WebhookEvent) *NullableWebhookEvent {
	return &NullableWebhookEvent{value: val, isSet: true}
}

func (v NullableWebhookEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


