/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the GetInvestmentHoldingsRequestOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetInvestmentHoldingsRequestOptions{}

// GetInvestmentHoldingsRequestOptions struct for GetInvestmentHoldingsRequestOptions
type GetInvestmentHoldingsRequestOptions struct {
	// An array of account_ids to retrieve holdings for.
	RemoteAccountIds []string `json:"remote_account_ids,omitempty"`
}

// NewGetInvestmentHoldingsRequestOptions instantiates a new GetInvestmentHoldingsRequestOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInvestmentHoldingsRequestOptions() *GetInvestmentHoldingsRequestOptions {
	this := GetInvestmentHoldingsRequestOptions{}
	return &this
}

// NewGetInvestmentHoldingsRequestOptionsWithDefaults instantiates a new GetInvestmentHoldingsRequestOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInvestmentHoldingsRequestOptionsWithDefaults() *GetInvestmentHoldingsRequestOptions {
	this := GetInvestmentHoldingsRequestOptions{}
	return &this
}

// GetRemoteAccountIds returns the RemoteAccountIds field value if set, zero value otherwise.
func (o *GetInvestmentHoldingsRequestOptions) GetRemoteAccountIds() []string {
	if o == nil || IsNil(o.RemoteAccountIds) {
		var ret []string
		return ret
	}
	return o.RemoteAccountIds
}

// GetRemoteAccountIdsOk returns a tuple with the RemoteAccountIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInvestmentHoldingsRequestOptions) GetRemoteAccountIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.RemoteAccountIds) {
		return nil, false
	}
	return o.RemoteAccountIds, true
}

// HasRemoteAccountIds returns a boolean if a field has been set.
func (o *GetInvestmentHoldingsRequestOptions) HasRemoteAccountIds() bool {
	if o != nil && !IsNil(o.RemoteAccountIds) {
		return true
	}

	return false
}

// SetRemoteAccountIds gets a reference to the given []string and assigns it to the RemoteAccountIds field.
func (o *GetInvestmentHoldingsRequestOptions) SetRemoteAccountIds(v []string) {
	o.RemoteAccountIds = v
}

func (o GetInvestmentHoldingsRequestOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetInvestmentHoldingsRequestOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RemoteAccountIds) {
		toSerialize["remote_account_ids"] = o.RemoteAccountIds
	}
	return toSerialize, nil
}

type NullableGetInvestmentHoldingsRequestOptions struct {
	value *GetInvestmentHoldingsRequestOptions
	isSet bool
}

func (v NullableGetInvestmentHoldingsRequestOptions) Get() *GetInvestmentHoldingsRequestOptions {
	return v.value
}

func (v *NullableGetInvestmentHoldingsRequestOptions) Set(val *GetInvestmentHoldingsRequestOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInvestmentHoldingsRequestOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInvestmentHoldingsRequestOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInvestmentHoldingsRequestOptions(val *GetInvestmentHoldingsRequestOptions) *NullableGetInvestmentHoldingsRequestOptions {
	return &NullableGetInvestmentHoldingsRequestOptions{value: val, isSet: true}
}

func (v NullableGetInvestmentHoldingsRequestOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInvestmentHoldingsRequestOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


