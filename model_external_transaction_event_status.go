/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"fmt"
)

// ExternalTransactionEventStatus the model 'ExternalTransactionEventStatus'
type ExternalTransactionEventStatus string

// List of ExternalTransactionEventStatus
const (
	EXTERNALTRANSACTIONEVENTSTATUS_PENDING ExternalTransactionEventStatus = "pending"
	EXTERNALTRANSACTIONEVENTSTATUS_POSTED ExternalTransactionEventStatus = "posted"
)

// All allowed values of ExternalTransactionEventStatus enum
var AllowedExternalTransactionEventStatusEnumValues = []ExternalTransactionEventStatus{
	"pending",
	"posted",
}

func (v *ExternalTransactionEventStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExternalTransactionEventStatus(value)
	for _, existing := range AllowedExternalTransactionEventStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExternalTransactionEventStatus", value)
}

// NewExternalTransactionEventStatusFromValue returns a pointer to a valid ExternalTransactionEventStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExternalTransactionEventStatusFromValue(v string) (*ExternalTransactionEventStatus, error) {
	ev := ExternalTransactionEventStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExternalTransactionEventStatus: valid values are %v", v, AllowedExternalTransactionEventStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExternalTransactionEventStatus) IsValid() bool {
	for _, existing := range AllowedExternalTransactionEventStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExternalTransactionEventStatus value
func (v ExternalTransactionEventStatus) Ptr() *ExternalTransactionEventStatus {
	return &v
}

type NullableExternalTransactionEventStatus struct {
	value *ExternalTransactionEventStatus
	isSet bool
}

func (v NullableExternalTransactionEventStatus) Get() *ExternalTransactionEventStatus {
	return v.value
}

func (v *NullableExternalTransactionEventStatus) Set(val *ExternalTransactionEventStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalTransactionEventStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalTransactionEventStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalTransactionEventStatus(val *ExternalTransactionEventStatus) *NullableExternalTransactionEventStatus {
	return &NullableExternalTransactionEventStatus{value: val, isSet: true}
}

func (v NullableExternalTransactionEventStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalTransactionEventStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

