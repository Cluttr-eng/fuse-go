/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSessionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSessionRequest{}

// CreateSessionRequest struct for CreateSessionRequest
type CreateSessionRequest struct {
	SupportedFinancialInstitutionAggregators []Aggregator `json:"supported_financial_institution_aggregators"`
	// List of products that you would like the institutions to support
	Products []Product `json:"products"`
	// List of country codes that you would like the institutions to support
	CountryCodes []CountryCode `json:"country_codes,omitempty"`
	Entity Entity `json:"entity"`
	// The fuse access token for an existing financial connection. This will perform the process to reconnect an existing disconnected account.
	AccessToken *string `json:"access_token,omitempty"`
	// Set to false for web SDKs (e.g., React), and true for mobile SDKs (e.g., React Native, Flutter, iOS, Android).
	IsWebView *bool `json:"is_web_view,omitempty"`
}

type _CreateSessionRequest CreateSessionRequest

// NewCreateSessionRequest instantiates a new CreateSessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSessionRequest(supportedFinancialInstitutionAggregators []Aggregator, products []Product, entity Entity) *CreateSessionRequest {
	this := CreateSessionRequest{}
	this.SupportedFinancialInstitutionAggregators = supportedFinancialInstitutionAggregators
	this.Products = products
	this.Entity = entity
	return &this
}

// NewCreateSessionRequestWithDefaults instantiates a new CreateSessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSessionRequestWithDefaults() *CreateSessionRequest {
	this := CreateSessionRequest{}
	return &this
}

// GetSupportedFinancialInstitutionAggregators returns the SupportedFinancialInstitutionAggregators field value
func (o *CreateSessionRequest) GetSupportedFinancialInstitutionAggregators() []Aggregator {
	if o == nil {
		var ret []Aggregator
		return ret
	}

	return o.SupportedFinancialInstitutionAggregators
}

// GetSupportedFinancialInstitutionAggregatorsOk returns a tuple with the SupportedFinancialInstitutionAggregators field value
// and a boolean to check if the value has been set.
func (o *CreateSessionRequest) GetSupportedFinancialInstitutionAggregatorsOk() ([]Aggregator, bool) {
	if o == nil {
		return nil, false
	}
	return o.SupportedFinancialInstitutionAggregators, true
}

// SetSupportedFinancialInstitutionAggregators sets field value
func (o *CreateSessionRequest) SetSupportedFinancialInstitutionAggregators(v []Aggregator) {
	o.SupportedFinancialInstitutionAggregators = v
}

// GetProducts returns the Products field value
func (o *CreateSessionRequest) GetProducts() []Product {
	if o == nil {
		var ret []Product
		return ret
	}

	return o.Products
}

// GetProductsOk returns a tuple with the Products field value
// and a boolean to check if the value has been set.
func (o *CreateSessionRequest) GetProductsOk() ([]Product, bool) {
	if o == nil {
		return nil, false
	}
	return o.Products, true
}

// SetProducts sets field value
func (o *CreateSessionRequest) SetProducts(v []Product) {
	o.Products = v
}

// GetCountryCodes returns the CountryCodes field value if set, zero value otherwise.
func (o *CreateSessionRequest) GetCountryCodes() []CountryCode {
	if o == nil || IsNil(o.CountryCodes) {
		var ret []CountryCode
		return ret
	}
	return o.CountryCodes
}

// GetCountryCodesOk returns a tuple with the CountryCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSessionRequest) GetCountryCodesOk() ([]CountryCode, bool) {
	if o == nil || IsNil(o.CountryCodes) {
		return nil, false
	}
	return o.CountryCodes, true
}

// HasCountryCodes returns a boolean if a field has been set.
func (o *CreateSessionRequest) HasCountryCodes() bool {
	if o != nil && !IsNil(o.CountryCodes) {
		return true
	}

	return false
}

// SetCountryCodes gets a reference to the given []CountryCode and assigns it to the CountryCodes field.
func (o *CreateSessionRequest) SetCountryCodes(v []CountryCode) {
	o.CountryCodes = v
}

// GetEntity returns the Entity field value
func (o *CreateSessionRequest) GetEntity() Entity {
	if o == nil {
		var ret Entity
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *CreateSessionRequest) GetEntityOk() (*Entity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *CreateSessionRequest) SetEntity(v Entity) {
	o.Entity = v
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise.
func (o *CreateSessionRequest) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken) {
		var ret string
		return ret
	}
	return *o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSessionRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AccessToken) {
		return nil, false
	}
	return o.AccessToken, true
}

// HasAccessToken returns a boolean if a field has been set.
func (o *CreateSessionRequest) HasAccessToken() bool {
	if o != nil && !IsNil(o.AccessToken) {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given string and assigns it to the AccessToken field.
func (o *CreateSessionRequest) SetAccessToken(v string) {
	o.AccessToken = &v
}

// GetIsWebView returns the IsWebView field value if set, zero value otherwise.
func (o *CreateSessionRequest) GetIsWebView() bool {
	if o == nil || IsNil(o.IsWebView) {
		var ret bool
		return ret
	}
	return *o.IsWebView
}

// GetIsWebViewOk returns a tuple with the IsWebView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSessionRequest) GetIsWebViewOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWebView) {
		return nil, false
	}
	return o.IsWebView, true
}

// HasIsWebView returns a boolean if a field has been set.
func (o *CreateSessionRequest) HasIsWebView() bool {
	if o != nil && !IsNil(o.IsWebView) {
		return true
	}

	return false
}

// SetIsWebView gets a reference to the given bool and assigns it to the IsWebView field.
func (o *CreateSessionRequest) SetIsWebView(v bool) {
	o.IsWebView = &v
}

func (o CreateSessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSessionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["supported_financial_institution_aggregators"] = o.SupportedFinancialInstitutionAggregators
	toSerialize["products"] = o.Products
	if !IsNil(o.CountryCodes) {
		toSerialize["country_codes"] = o.CountryCodes
	}
	toSerialize["entity"] = o.Entity
	if !IsNil(o.AccessToken) {
		toSerialize["access_token"] = o.AccessToken
	}
	if !IsNil(o.IsWebView) {
		toSerialize["is_web_view"] = o.IsWebView
	}
	return toSerialize, nil
}

func (o *CreateSessionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"supported_financial_institution_aggregators",
		"products",
		"entity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSessionRequest := _CreateSessionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSessionRequest)

	if err != nil {
		return err
	}

	*o = CreateSessionRequest(varCreateSessionRequest)

	return err
}

type NullableCreateSessionRequest struct {
	value *CreateSessionRequest
	isSet bool
}

func (v NullableCreateSessionRequest) Get() *CreateSessionRequest {
	return v.value
}

func (v *NullableCreateSessionRequest) Set(val *CreateSessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSessionRequest(val *CreateSessionRequest) *NullableCreateSessionRequest {
	return &NullableCreateSessionRequest{value: val, isSet: true}
}

func (v NullableCreateSessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


