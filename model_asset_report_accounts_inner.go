/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the AssetReportAccountsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssetReportAccountsInner{}

// AssetReportAccountsInner struct for AssetReportAccountsInner
type AssetReportAccountsInner struct {
	// The remote account ID of the account.
	RemoteId *string `json:"remote_id,omitempty"`
	Balance *AssetReportAccountsInnerBalance `json:"balance,omitempty"`
	// An array of historical balances for the account.
	HistoricalBalances []AssetReportAccountsInnerHistoricalBalancesInner `json:"historical_balances,omitempty"`
	// An array of historical transactions for the account.
	Transactions []AssetReportTransaction `json:"transactions,omitempty"`
}

// NewAssetReportAccountsInner instantiates a new AssetReportAccountsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssetReportAccountsInner() *AssetReportAccountsInner {
	this := AssetReportAccountsInner{}
	return &this
}

// NewAssetReportAccountsInnerWithDefaults instantiates a new AssetReportAccountsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssetReportAccountsInnerWithDefaults() *AssetReportAccountsInner {
	this := AssetReportAccountsInner{}
	return &this
}

// GetRemoteId returns the RemoteId field value if set, zero value otherwise.
func (o *AssetReportAccountsInner) GetRemoteId() string {
	if o == nil || IsNil(o.RemoteId) {
		var ret string
		return ret
	}
	return *o.RemoteId
}

// GetRemoteIdOk returns a tuple with the RemoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetReportAccountsInner) GetRemoteIdOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteId) {
		return nil, false
	}
	return o.RemoteId, true
}

// HasRemoteId returns a boolean if a field has been set.
func (o *AssetReportAccountsInner) HasRemoteId() bool {
	if o != nil && !IsNil(o.RemoteId) {
		return true
	}

	return false
}

// SetRemoteId gets a reference to the given string and assigns it to the RemoteId field.
func (o *AssetReportAccountsInner) SetRemoteId(v string) {
	o.RemoteId = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *AssetReportAccountsInner) GetBalance() AssetReportAccountsInnerBalance {
	if o == nil || IsNil(o.Balance) {
		var ret AssetReportAccountsInnerBalance
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetReportAccountsInner) GetBalanceOk() (*AssetReportAccountsInnerBalance, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *AssetReportAccountsInner) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given AssetReportAccountsInnerBalance and assigns it to the Balance field.
func (o *AssetReportAccountsInner) SetBalance(v AssetReportAccountsInnerBalance) {
	o.Balance = &v
}

// GetHistoricalBalances returns the HistoricalBalances field value if set, zero value otherwise.
func (o *AssetReportAccountsInner) GetHistoricalBalances() []AssetReportAccountsInnerHistoricalBalancesInner {
	if o == nil || IsNil(o.HistoricalBalances) {
		var ret []AssetReportAccountsInnerHistoricalBalancesInner
		return ret
	}
	return o.HistoricalBalances
}

// GetHistoricalBalancesOk returns a tuple with the HistoricalBalances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetReportAccountsInner) GetHistoricalBalancesOk() ([]AssetReportAccountsInnerHistoricalBalancesInner, bool) {
	if o == nil || IsNil(o.HistoricalBalances) {
		return nil, false
	}
	return o.HistoricalBalances, true
}

// HasHistoricalBalances returns a boolean if a field has been set.
func (o *AssetReportAccountsInner) HasHistoricalBalances() bool {
	if o != nil && !IsNil(o.HistoricalBalances) {
		return true
	}

	return false
}

// SetHistoricalBalances gets a reference to the given []AssetReportAccountsInnerHistoricalBalancesInner and assigns it to the HistoricalBalances field.
func (o *AssetReportAccountsInner) SetHistoricalBalances(v []AssetReportAccountsInnerHistoricalBalancesInner) {
	o.HistoricalBalances = v
}

// GetTransactions returns the Transactions field value if set, zero value otherwise.
func (o *AssetReportAccountsInner) GetTransactions() []AssetReportTransaction {
	if o == nil || IsNil(o.Transactions) {
		var ret []AssetReportTransaction
		return ret
	}
	return o.Transactions
}

// GetTransactionsOk returns a tuple with the Transactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssetReportAccountsInner) GetTransactionsOk() ([]AssetReportTransaction, bool) {
	if o == nil || IsNil(o.Transactions) {
		return nil, false
	}
	return o.Transactions, true
}

// HasTransactions returns a boolean if a field has been set.
func (o *AssetReportAccountsInner) HasTransactions() bool {
	if o != nil && !IsNil(o.Transactions) {
		return true
	}

	return false
}

// SetTransactions gets a reference to the given []AssetReportTransaction and assigns it to the Transactions field.
func (o *AssetReportAccountsInner) SetTransactions(v []AssetReportTransaction) {
	o.Transactions = v
}

func (o AssetReportAccountsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssetReportAccountsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RemoteId) {
		toSerialize["remote_id"] = o.RemoteId
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.HistoricalBalances) {
		toSerialize["historical_balances"] = o.HistoricalBalances
	}
	if !IsNil(o.Transactions) {
		toSerialize["transactions"] = o.Transactions
	}
	return toSerialize, nil
}

type NullableAssetReportAccountsInner struct {
	value *AssetReportAccountsInner
	isSet bool
}

func (v NullableAssetReportAccountsInner) Get() *AssetReportAccountsInner {
	return v.value
}

func (v *NullableAssetReportAccountsInner) Set(val *AssetReportAccountsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAssetReportAccountsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAssetReportAccountsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssetReportAccountsInner(val *AssetReportAccountsInner) *NullableAssetReportAccountsInner {
	return &NullableAssetReportAccountsInner{value: val, isSet: true}
}

func (v NullableAssetReportAccountsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssetReportAccountsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


