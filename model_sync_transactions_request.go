/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SyncTransactionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncTransactionsRequest{}

// SyncTransactionsRequest struct for SyncTransactionsRequest
type SyncTransactionsRequest struct {
	// The access token of the financial institution connection
	AccessToken string `json:"access_token"`
	// The cursor value represents the last update requested. Providing it will cause the response to only return changes after this update. If omitted, the entire history of updates will be returned, starting with the first-added transactions on the item.
	Cursor *string `json:"cursor,omitempty"`
	// The number of transaction updates to fetch.
	Count *int32 `json:"count,omitempty"`
}

type _SyncTransactionsRequest SyncTransactionsRequest

// NewSyncTransactionsRequest instantiates a new SyncTransactionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncTransactionsRequest(accessToken string) *SyncTransactionsRequest {
	this := SyncTransactionsRequest{}
	this.AccessToken = accessToken
	return &this
}

// NewSyncTransactionsRequestWithDefaults instantiates a new SyncTransactionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncTransactionsRequestWithDefaults() *SyncTransactionsRequest {
	this := SyncTransactionsRequest{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *SyncTransactionsRequest) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *SyncTransactionsRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *SyncTransactionsRequest) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetCursor returns the Cursor field value if set, zero value otherwise.
func (o *SyncTransactionsRequest) GetCursor() string {
	if o == nil || IsNil(o.Cursor) {
		var ret string
		return ret
	}
	return *o.Cursor
}

// GetCursorOk returns a tuple with the Cursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncTransactionsRequest) GetCursorOk() (*string, bool) {
	if o == nil || IsNil(o.Cursor) {
		return nil, false
	}
	return o.Cursor, true
}

// HasCursor returns a boolean if a field has been set.
func (o *SyncTransactionsRequest) HasCursor() bool {
	if o != nil && !IsNil(o.Cursor) {
		return true
	}

	return false
}

// SetCursor gets a reference to the given string and assigns it to the Cursor field.
func (o *SyncTransactionsRequest) SetCursor(v string) {
	o.Cursor = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *SyncTransactionsRequest) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncTransactionsRequest) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *SyncTransactionsRequest) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *SyncTransactionsRequest) SetCount(v int32) {
	o.Count = &v
}

func (o SyncTransactionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncTransactionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token"] = o.AccessToken
	if !IsNil(o.Cursor) {
		toSerialize["cursor"] = o.Cursor
	}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	return toSerialize, nil
}

func (o *SyncTransactionsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"access_token",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSyncTransactionsRequest := _SyncTransactionsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSyncTransactionsRequest)

	if err != nil {
		return err
	}

	*o = SyncTransactionsRequest(varSyncTransactionsRequest)

	return err
}

type NullableSyncTransactionsRequest struct {
	value *SyncTransactionsRequest
	isSet bool
}

func (v NullableSyncTransactionsRequest) Get() *SyncTransactionsRequest {
	return v.value
}

func (v *NullableSyncTransactionsRequest) Set(val *SyncTransactionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncTransactionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncTransactionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncTransactionsRequest(val *SyncTransactionsRequest) *NullableSyncTransactionsRequest {
	return &NullableSyncTransactionsRequest{value: val, isSet: true}
}

func (v NullableSyncTransactionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncTransactionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


