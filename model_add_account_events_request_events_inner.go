/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"fmt"
)

// AddAccountEventsRequestEventsInner - struct for AddAccountEventsRequestEventsInner
type AddAccountEventsRequestEventsInner struct {
	ExternalTransactionEvent *ExternalTransactionEvent
	InAppTransactionEvent *InAppTransactionEvent
	UpdatedBalanceEvent *UpdatedBalanceEvent
}

// ExternalTransactionEventAsAddAccountEventsRequestEventsInner is a convenience function that returns ExternalTransactionEvent wrapped in AddAccountEventsRequestEventsInner
func ExternalTransactionEventAsAddAccountEventsRequestEventsInner(v *ExternalTransactionEvent) AddAccountEventsRequestEventsInner {
	return AddAccountEventsRequestEventsInner{
		ExternalTransactionEvent: v,
	}
}

// InAppTransactionEventAsAddAccountEventsRequestEventsInner is a convenience function that returns InAppTransactionEvent wrapped in AddAccountEventsRequestEventsInner
func InAppTransactionEventAsAddAccountEventsRequestEventsInner(v *InAppTransactionEvent) AddAccountEventsRequestEventsInner {
	return AddAccountEventsRequestEventsInner{
		InAppTransactionEvent: v,
	}
}

// UpdatedBalanceEventAsAddAccountEventsRequestEventsInner is a convenience function that returns UpdatedBalanceEvent wrapped in AddAccountEventsRequestEventsInner
func UpdatedBalanceEventAsAddAccountEventsRequestEventsInner(v *UpdatedBalanceEvent) AddAccountEventsRequestEventsInner {
	return AddAccountEventsRequestEventsInner{
		UpdatedBalanceEvent: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddAccountEventsRequestEventsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ExternalTransactionEvent
	err = newStrictDecoder(data).Decode(&dst.ExternalTransactionEvent)
	if err == nil {
		jsonExternalTransactionEvent, _ := json.Marshal(dst.ExternalTransactionEvent)
		if string(jsonExternalTransactionEvent) == "{}" { // empty struct
			dst.ExternalTransactionEvent = nil
		} else {
			match++
		}
	} else {
		dst.ExternalTransactionEvent = nil
	}

	// try to unmarshal data into InAppTransactionEvent
	err = newStrictDecoder(data).Decode(&dst.InAppTransactionEvent)
	if err == nil {
		jsonInAppTransactionEvent, _ := json.Marshal(dst.InAppTransactionEvent)
		if string(jsonInAppTransactionEvent) == "{}" { // empty struct
			dst.InAppTransactionEvent = nil
		} else {
			match++
		}
	} else {
		dst.InAppTransactionEvent = nil
	}

	// try to unmarshal data into UpdatedBalanceEvent
	err = newStrictDecoder(data).Decode(&dst.UpdatedBalanceEvent)
	if err == nil {
		jsonUpdatedBalanceEvent, _ := json.Marshal(dst.UpdatedBalanceEvent)
		if string(jsonUpdatedBalanceEvent) == "{}" { // empty struct
			dst.UpdatedBalanceEvent = nil
		} else {
			match++
		}
	} else {
		dst.UpdatedBalanceEvent = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ExternalTransactionEvent = nil
		dst.InAppTransactionEvent = nil
		dst.UpdatedBalanceEvent = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddAccountEventsRequestEventsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddAccountEventsRequestEventsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddAccountEventsRequestEventsInner) MarshalJSON() ([]byte, error) {
	if src.ExternalTransactionEvent != nil {
		return json.Marshal(&src.ExternalTransactionEvent)
	}

	if src.InAppTransactionEvent != nil {
		return json.Marshal(&src.InAppTransactionEvent)
	}

	if src.UpdatedBalanceEvent != nil {
		return json.Marshal(&src.UpdatedBalanceEvent)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddAccountEventsRequestEventsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ExternalTransactionEvent != nil {
		return obj.ExternalTransactionEvent
	}

	if obj.InAppTransactionEvent != nil {
		return obj.InAppTransactionEvent
	}

	if obj.UpdatedBalanceEvent != nil {
		return obj.UpdatedBalanceEvent
	}

	// all schemas are nil
	return nil
}

type NullableAddAccountEventsRequestEventsInner struct {
	value *AddAccountEventsRequestEventsInner
	isSet bool
}

func (v NullableAddAccountEventsRequestEventsInner) Get() *AddAccountEventsRequestEventsInner {
	return v.value
}

func (v *NullableAddAccountEventsRequestEventsInner) Set(val *AddAccountEventsRequestEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAccountEventsRequestEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAccountEventsRequestEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAccountEventsRequestEventsInner(val *AddAccountEventsRequestEventsInner) *NullableAddAccountEventsRequestEventsInner {
	return &NullableAddAccountEventsRequestEventsInner{value: val, isSet: true}
}

func (v NullableAddAccountEventsRequestEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAccountEventsRequestEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


