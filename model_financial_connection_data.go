/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the FinancialConnectionData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinancialConnectionData{}

// FinancialConnectionData struct for FinancialConnectionData
type FinancialConnectionData struct {
	// The financial connection id.
	Id string `json:"id"`
	// The Fuse Institution ID associated with the financial connection
	InstitutionId NullableString `json:"institution_id,omitempty"`
}

// NewFinancialConnectionData instantiates a new FinancialConnectionData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialConnectionData(id string) *FinancialConnectionData {
	this := FinancialConnectionData{}
	this.Id = id
	return &this
}

// NewFinancialConnectionDataWithDefaults instantiates a new FinancialConnectionData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialConnectionDataWithDefaults() *FinancialConnectionData {
	this := FinancialConnectionData{}
	return &this
}

// GetId returns the Id field value
func (o *FinancialConnectionData) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FinancialConnectionData) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FinancialConnectionData) SetId(v string) {
	o.Id = v
}

// GetInstitutionId returns the InstitutionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FinancialConnectionData) GetInstitutionId() string {
	if o == nil || IsNil(o.InstitutionId.Get()) {
		var ret string
		return ret
	}
	return *o.InstitutionId.Get()
}

// GetInstitutionIdOk returns a tuple with the InstitutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FinancialConnectionData) GetInstitutionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstitutionId.Get(), o.InstitutionId.IsSet()
}

// HasInstitutionId returns a boolean if a field has been set.
func (o *FinancialConnectionData) HasInstitutionId() bool {
	if o != nil && o.InstitutionId.IsSet() {
		return true
	}

	return false
}

// SetInstitutionId gets a reference to the given NullableString and assigns it to the InstitutionId field.
func (o *FinancialConnectionData) SetInstitutionId(v string) {
	o.InstitutionId.Set(&v)
}
// SetInstitutionIdNil sets the value for InstitutionId to be an explicit nil
func (o *FinancialConnectionData) SetInstitutionIdNil() {
	o.InstitutionId.Set(nil)
}

// UnsetInstitutionId ensures that no value is present for InstitutionId, not even an explicit nil
func (o *FinancialConnectionData) UnsetInstitutionId() {
	o.InstitutionId.Unset()
}

func (o FinancialConnectionData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinancialConnectionData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.InstitutionId.IsSet() {
		toSerialize["institution_id"] = o.InstitutionId.Get()
	}
	return toSerialize, nil
}

type NullableFinancialConnectionData struct {
	value *FinancialConnectionData
	isSet bool
}

func (v NullableFinancialConnectionData) Get() *FinancialConnectionData {
	return v.value
}

func (v *NullableFinancialConnectionData) Set(val *FinancialConnectionData) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialConnectionData) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialConnectionData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialConnectionData(val *FinancialConnectionData) *NullableFinancialConnectionData {
	return &NullableFinancialConnectionData{value: val, isSet: true}
}

func (v NullableFinancialConnectionData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialConnectionData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


