/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the FinancialConnectionsOwnerAddressesInnerData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinancialConnectionsOwnerAddressesInnerData{}

// FinancialConnectionsOwnerAddressesInnerData struct for FinancialConnectionsOwnerAddressesInnerData
type FinancialConnectionsOwnerAddressesInnerData struct {
	// Full address of the owner
	FullAddress *string `json:"full_address,omitempty"`
	// City of the address
	City *string `json:"city,omitempty"`
	// Country of the address
	Country *string `json:"country,omitempty"`
	// Postal code of the address
	PostalCode *string `json:"postal_code,omitempty"`
	// Region of the address
	Region *string `json:"region,omitempty"`
	// Street of the address
	Street *string `json:"street,omitempty"`
}

// NewFinancialConnectionsOwnerAddressesInnerData instantiates a new FinancialConnectionsOwnerAddressesInnerData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialConnectionsOwnerAddressesInnerData() *FinancialConnectionsOwnerAddressesInnerData {
	this := FinancialConnectionsOwnerAddressesInnerData{}
	return &this
}

// NewFinancialConnectionsOwnerAddressesInnerDataWithDefaults instantiates a new FinancialConnectionsOwnerAddressesInnerData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialConnectionsOwnerAddressesInnerDataWithDefaults() *FinancialConnectionsOwnerAddressesInnerData {
	this := FinancialConnectionsOwnerAddressesInnerData{}
	return &this
}

// GetFullAddress returns the FullAddress field value if set, zero value otherwise.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetFullAddress() string {
	if o == nil || IsNil(o.FullAddress) {
		var ret string
		return ret
	}
	return *o.FullAddress
}

// GetFullAddressOk returns a tuple with the FullAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetFullAddressOk() (*string, bool) {
	if o == nil || IsNil(o.FullAddress) {
		return nil, false
	}
	return o.FullAddress, true
}

// HasFullAddress returns a boolean if a field has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) HasFullAddress() bool {
	if o != nil && !IsNil(o.FullAddress) {
		return true
	}

	return false
}

// SetFullAddress gets a reference to the given string and assigns it to the FullAddress field.
func (o *FinancialConnectionsOwnerAddressesInnerData) SetFullAddress(v string) {
	o.FullAddress = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *FinancialConnectionsOwnerAddressesInnerData) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *FinancialConnectionsOwnerAddressesInnerData) SetCountry(v string) {
	o.Country = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *FinancialConnectionsOwnerAddressesInnerData) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *FinancialConnectionsOwnerAddressesInnerData) SetRegion(v string) {
	o.Region = &v
}

// GetStreet returns the Street field value if set, zero value otherwise.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetStreet() string {
	if o == nil || IsNil(o.Street) {
		var ret string
		return ret
	}
	return *o.Street
}

// GetStreetOk returns a tuple with the Street field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) GetStreetOk() (*string, bool) {
	if o == nil || IsNil(o.Street) {
		return nil, false
	}
	return o.Street, true
}

// HasStreet returns a boolean if a field has been set.
func (o *FinancialConnectionsOwnerAddressesInnerData) HasStreet() bool {
	if o != nil && !IsNil(o.Street) {
		return true
	}

	return false
}

// SetStreet gets a reference to the given string and assigns it to the Street field.
func (o *FinancialConnectionsOwnerAddressesInnerData) SetStreet(v string) {
	o.Street = &v
}

func (o FinancialConnectionsOwnerAddressesInnerData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinancialConnectionsOwnerAddressesInnerData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FullAddress) {
		toSerialize["full_address"] = o.FullAddress
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Street) {
		toSerialize["street"] = o.Street
	}
	return toSerialize, nil
}

type NullableFinancialConnectionsOwnerAddressesInnerData struct {
	value *FinancialConnectionsOwnerAddressesInnerData
	isSet bool
}

func (v NullableFinancialConnectionsOwnerAddressesInnerData) Get() *FinancialConnectionsOwnerAddressesInnerData {
	return v.value
}

func (v *NullableFinancialConnectionsOwnerAddressesInnerData) Set(val *FinancialConnectionsOwnerAddressesInnerData) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialConnectionsOwnerAddressesInnerData) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialConnectionsOwnerAddressesInnerData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialConnectionsOwnerAddressesInnerData(val *FinancialConnectionsOwnerAddressesInnerData) *NullableFinancialConnectionsOwnerAddressesInnerData {
	return &NullableFinancialConnectionsOwnerAddressesInnerData{value: val, isSet: true}
}

func (v NullableFinancialConnectionsOwnerAddressesInnerData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialConnectionsOwnerAddressesInnerData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


