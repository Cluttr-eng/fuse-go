/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the FuseApiWarningData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FuseApiWarningData{}

// FuseApiWarningData struct for FuseApiWarningData
type FuseApiWarningData struct {
	Aggregator *Aggregator `json:"aggregator,omitempty"`
	Warnings []FuseApiWarningDataWarningsInner `json:"warnings,omitempty"`
}

// NewFuseApiWarningData instantiates a new FuseApiWarningData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFuseApiWarningData() *FuseApiWarningData {
	this := FuseApiWarningData{}
	return &this
}

// NewFuseApiWarningDataWithDefaults instantiates a new FuseApiWarningData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFuseApiWarningDataWithDefaults() *FuseApiWarningData {
	this := FuseApiWarningData{}
	return &this
}

// GetAggregator returns the Aggregator field value if set, zero value otherwise.
func (o *FuseApiWarningData) GetAggregator() Aggregator {
	if o == nil || IsNil(o.Aggregator) {
		var ret Aggregator
		return ret
	}
	return *o.Aggregator
}

// GetAggregatorOk returns a tuple with the Aggregator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuseApiWarningData) GetAggregatorOk() (*Aggregator, bool) {
	if o == nil || IsNil(o.Aggregator) {
		return nil, false
	}
	return o.Aggregator, true
}

// HasAggregator returns a boolean if a field has been set.
func (o *FuseApiWarningData) HasAggregator() bool {
	if o != nil && !IsNil(o.Aggregator) {
		return true
	}

	return false
}

// SetAggregator gets a reference to the given Aggregator and assigns it to the Aggregator field.
func (o *FuseApiWarningData) SetAggregator(v Aggregator) {
	o.Aggregator = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *FuseApiWarningData) GetWarnings() []FuseApiWarningDataWarningsInner {
	if o == nil || IsNil(o.Warnings) {
		var ret []FuseApiWarningDataWarningsInner
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuseApiWarningData) GetWarningsOk() ([]FuseApiWarningDataWarningsInner, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *FuseApiWarningData) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []FuseApiWarningDataWarningsInner and assigns it to the Warnings field.
func (o *FuseApiWarningData) SetWarnings(v []FuseApiWarningDataWarningsInner) {
	o.Warnings = v
}

func (o FuseApiWarningData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FuseApiWarningData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aggregator) {
		toSerialize["aggregator"] = o.Aggregator
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableFuseApiWarningData struct {
	value *FuseApiWarningData
	isSet bool
}

func (v NullableFuseApiWarningData) Get() *FuseApiWarningData {
	return v.value
}

func (v *NullableFuseApiWarningData) Set(val *FuseApiWarningData) {
	v.value = val
	v.isSet = true
}

func (v NullableFuseApiWarningData) IsSet() bool {
	return v.isSet
}

func (v *NullableFuseApiWarningData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFuseApiWarningData(val *FuseApiWarningData) *NullableFuseApiWarningData {
	return &NullableFuseApiWarningData{value: val, isSet: true}
}

func (v NullableFuseApiWarningData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFuseApiWarningData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


