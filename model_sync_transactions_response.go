/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the SyncTransactionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyncTransactionsResponse{}

// SyncTransactionsResponse struct for SyncTransactionsResponse
type SyncTransactionsResponse struct {
	// Transactions that have been added to the item since `cursor` ordered by ascending last modified time.
	Added []Transaction `json:"added,omitempty"`
	// Transactions that have been modified on the item since `cursor` ordered by ascending last modified time.
	Modified []Transaction `json:"modified,omitempty"`
	// Transactions that have been removed from the item since `cursor` ordered by ascending last modified time.
	Removed []SyncTransactionsResponseRemovedInner `json:"removed,omitempty"`
	// Cursor used for fetching any future updates after the latest update provided in this response. The cursor obtained after all pages have been pulled (indicated by `has_next` being `false`) will be valid for at least 1 year. This cursor should be persisted for later calls.
	NextCursor *string `json:"next_cursor,omitempty"`
	// Represents if more than requested count of transaction updates exist. If true, the additional updates can be fetched by making an additional request with `cursor` set to `next_cursor`. If `has_next` is true, it's important to pull all available pages, to make it less likely for underlying data changes to conflict with pagination.
	HasNext *bool `json:"has_next,omitempty"`
	// An identifier that is exclusive to the request and can serve as a means for investigating and resolving issues.
	RequestId *string `json:"request_id,omitempty"`
}

// NewSyncTransactionsResponse instantiates a new SyncTransactionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyncTransactionsResponse() *SyncTransactionsResponse {
	this := SyncTransactionsResponse{}
	return &this
}

// NewSyncTransactionsResponseWithDefaults instantiates a new SyncTransactionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyncTransactionsResponseWithDefaults() *SyncTransactionsResponse {
	this := SyncTransactionsResponse{}
	return &this
}

// GetAdded returns the Added field value if set, zero value otherwise.
func (o *SyncTransactionsResponse) GetAdded() []Transaction {
	if o == nil || IsNil(o.Added) {
		var ret []Transaction
		return ret
	}
	return o.Added
}

// GetAddedOk returns a tuple with the Added field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncTransactionsResponse) GetAddedOk() ([]Transaction, bool) {
	if o == nil || IsNil(o.Added) {
		return nil, false
	}
	return o.Added, true
}

// HasAdded returns a boolean if a field has been set.
func (o *SyncTransactionsResponse) HasAdded() bool {
	if o != nil && !IsNil(o.Added) {
		return true
	}

	return false
}

// SetAdded gets a reference to the given []Transaction and assigns it to the Added field.
func (o *SyncTransactionsResponse) SetAdded(v []Transaction) {
	o.Added = v
}

// GetModified returns the Modified field value if set, zero value otherwise.
func (o *SyncTransactionsResponse) GetModified() []Transaction {
	if o == nil || IsNil(o.Modified) {
		var ret []Transaction
		return ret
	}
	return o.Modified
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncTransactionsResponse) GetModifiedOk() ([]Transaction, bool) {
	if o == nil || IsNil(o.Modified) {
		return nil, false
	}
	return o.Modified, true
}

// HasModified returns a boolean if a field has been set.
func (o *SyncTransactionsResponse) HasModified() bool {
	if o != nil && !IsNil(o.Modified) {
		return true
	}

	return false
}

// SetModified gets a reference to the given []Transaction and assigns it to the Modified field.
func (o *SyncTransactionsResponse) SetModified(v []Transaction) {
	o.Modified = v
}

// GetRemoved returns the Removed field value if set, zero value otherwise.
func (o *SyncTransactionsResponse) GetRemoved() []SyncTransactionsResponseRemovedInner {
	if o == nil || IsNil(o.Removed) {
		var ret []SyncTransactionsResponseRemovedInner
		return ret
	}
	return o.Removed
}

// GetRemovedOk returns a tuple with the Removed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncTransactionsResponse) GetRemovedOk() ([]SyncTransactionsResponseRemovedInner, bool) {
	if o == nil || IsNil(o.Removed) {
		return nil, false
	}
	return o.Removed, true
}

// HasRemoved returns a boolean if a field has been set.
func (o *SyncTransactionsResponse) HasRemoved() bool {
	if o != nil && !IsNil(o.Removed) {
		return true
	}

	return false
}

// SetRemoved gets a reference to the given []SyncTransactionsResponseRemovedInner and assigns it to the Removed field.
func (o *SyncTransactionsResponse) SetRemoved(v []SyncTransactionsResponseRemovedInner) {
	o.Removed = v
}

// GetNextCursor returns the NextCursor field value if set, zero value otherwise.
func (o *SyncTransactionsResponse) GetNextCursor() string {
	if o == nil || IsNil(o.NextCursor) {
		var ret string
		return ret
	}
	return *o.NextCursor
}

// GetNextCursorOk returns a tuple with the NextCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncTransactionsResponse) GetNextCursorOk() (*string, bool) {
	if o == nil || IsNil(o.NextCursor) {
		return nil, false
	}
	return o.NextCursor, true
}

// HasNextCursor returns a boolean if a field has been set.
func (o *SyncTransactionsResponse) HasNextCursor() bool {
	if o != nil && !IsNil(o.NextCursor) {
		return true
	}

	return false
}

// SetNextCursor gets a reference to the given string and assigns it to the NextCursor field.
func (o *SyncTransactionsResponse) SetNextCursor(v string) {
	o.NextCursor = &v
}

// GetHasNext returns the HasNext field value if set, zero value otherwise.
func (o *SyncTransactionsResponse) GetHasNext() bool {
	if o == nil || IsNil(o.HasNext) {
		var ret bool
		return ret
	}
	return *o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncTransactionsResponse) GetHasNextOk() (*bool, bool) {
	if o == nil || IsNil(o.HasNext) {
		return nil, false
	}
	return o.HasNext, true
}

// HasHasNext returns a boolean if a field has been set.
func (o *SyncTransactionsResponse) HasHasNext() bool {
	if o != nil && !IsNil(o.HasNext) {
		return true
	}

	return false
}

// SetHasNext gets a reference to the given bool and assigns it to the HasNext field.
func (o *SyncTransactionsResponse) SetHasNext(v bool) {
	o.HasNext = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *SyncTransactionsResponse) GetRequestId() string {
	if o == nil || IsNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyncTransactionsResponse) GetRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *SyncTransactionsResponse) HasRequestId() bool {
	if o != nil && !IsNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *SyncTransactionsResponse) SetRequestId(v string) {
	o.RequestId = &v
}

func (o SyncTransactionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyncTransactionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Added) {
		toSerialize["added"] = o.Added
	}
	if !IsNil(o.Modified) {
		toSerialize["modified"] = o.Modified
	}
	if !IsNil(o.Removed) {
		toSerialize["removed"] = o.Removed
	}
	if !IsNil(o.NextCursor) {
		toSerialize["next_cursor"] = o.NextCursor
	}
	if !IsNil(o.HasNext) {
		toSerialize["has_next"] = o.HasNext
	}
	if !IsNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	return toSerialize, nil
}

type NullableSyncTransactionsResponse struct {
	value *SyncTransactionsResponse
	isSet bool
}

func (v NullableSyncTransactionsResponse) Get() *SyncTransactionsResponse {
	return v.value
}

func (v *NullableSyncTransactionsResponse) Set(val *SyncTransactionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSyncTransactionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSyncTransactionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyncTransactionsResponse(val *SyncTransactionsResponse) *NullableSyncTransactionsResponse {
	return &NullableSyncTransactionsResponse{value: val, isSet: true}
}

func (v NullableSyncTransactionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyncTransactionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


