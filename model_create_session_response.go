/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSessionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSessionResponse{}

// CreateSessionResponse struct for CreateSessionResponse
type CreateSessionResponse struct {
	// 4 hours from the point of creation
	Expiration string `json:"expiration"`
	// Token needed by the frontend sdk to start the process
	ClientSecret string `json:"client_secret"`
	// An identifier that is exclusive to the request and can serve as a means for investigating and resolving issues.
	RequestId string `json:"request_id"`
}

type _CreateSessionResponse CreateSessionResponse

// NewCreateSessionResponse instantiates a new CreateSessionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSessionResponse(expiration string, clientSecret string, requestId string) *CreateSessionResponse {
	this := CreateSessionResponse{}
	this.Expiration = expiration
	this.ClientSecret = clientSecret
	this.RequestId = requestId
	return &this
}

// NewCreateSessionResponseWithDefaults instantiates a new CreateSessionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSessionResponseWithDefaults() *CreateSessionResponse {
	this := CreateSessionResponse{}
	return &this
}

// GetExpiration returns the Expiration field value
func (o *CreateSessionResponse) GetExpiration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value
// and a boolean to check if the value has been set.
func (o *CreateSessionResponse) GetExpirationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expiration, true
}

// SetExpiration sets field value
func (o *CreateSessionResponse) SetExpiration(v string) {
	o.Expiration = v
}

// GetClientSecret returns the ClientSecret field value
func (o *CreateSessionResponse) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *CreateSessionResponse) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *CreateSessionResponse) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetRequestId returns the RequestId field value
func (o *CreateSessionResponse) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *CreateSessionResponse) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *CreateSessionResponse) SetRequestId(v string) {
	o.RequestId = v
}

func (o CreateSessionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSessionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["expiration"] = o.Expiration
	toSerialize["client_secret"] = o.ClientSecret
	toSerialize["request_id"] = o.RequestId
	return toSerialize, nil
}

func (o *CreateSessionResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"expiration",
		"client_secret",
		"request_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSessionResponse := _CreateSessionResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSessionResponse)

	if err != nil {
		return err
	}

	*o = CreateSessionResponse(varCreateSessionResponse)

	return err
}

type NullableCreateSessionResponse struct {
	value *CreateSessionResponse
	isSet bool
}

func (v NullableCreateSessionResponse) Get() *CreateSessionResponse {
	return v.value
}

func (v *NullableCreateSessionResponse) Set(val *CreateSessionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSessionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSessionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSessionResponse(val *CreateSessionResponse) *NullableCreateSessionResponse {
	return &NullableCreateSessionResponse{value: val, isSet: true}
}

func (v NullableCreateSessionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSessionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


