/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the FuseApiError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FuseApiError{}

// FuseApiError struct for FuseApiError
type FuseApiError struct {
	RequestId string `json:"request_id"`
	Title string `json:"title"`
	Details string `json:"details"`
	Code FuseApiErrorCode `json:"code"`
	Type FuseApiErrorType `json:"type"`
	Source string `json:"source"`
	Data *FuseApiErrorData `json:"data,omitempty"`
}

// NewFuseApiError instantiates a new FuseApiError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFuseApiError(requestId string, title string, details string, code FuseApiErrorCode, type_ FuseApiErrorType, source string) *FuseApiError {
	this := FuseApiError{}
	this.RequestId = requestId
	this.Title = title
	this.Details = details
	this.Code = code
	this.Type = type_
	this.Source = source
	return &this
}

// NewFuseApiErrorWithDefaults instantiates a new FuseApiError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFuseApiErrorWithDefaults() *FuseApiError {
	this := FuseApiError{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *FuseApiError) GetRequestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *FuseApiError) GetRequestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *FuseApiError) SetRequestId(v string) {
	o.RequestId = v
}

// GetTitle returns the Title field value
func (o *FuseApiError) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *FuseApiError) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *FuseApiError) SetTitle(v string) {
	o.Title = v
}

// GetDetails returns the Details field value
func (o *FuseApiError) GetDetails() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *FuseApiError) GetDetailsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *FuseApiError) SetDetails(v string) {
	o.Details = v
}

// GetCode returns the Code field value
func (o *FuseApiError) GetCode() FuseApiErrorCode {
	if o == nil {
		var ret FuseApiErrorCode
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *FuseApiError) GetCodeOk() (*FuseApiErrorCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *FuseApiError) SetCode(v FuseApiErrorCode) {
	o.Code = v
}

// GetType returns the Type field value
func (o *FuseApiError) GetType() FuseApiErrorType {
	if o == nil {
		var ret FuseApiErrorType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FuseApiError) GetTypeOk() (*FuseApiErrorType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FuseApiError) SetType(v FuseApiErrorType) {
	o.Type = v
}

// GetSource returns the Source field value
func (o *FuseApiError) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *FuseApiError) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *FuseApiError) SetSource(v string) {
	o.Source = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *FuseApiError) GetData() FuseApiErrorData {
	if o == nil || IsNil(o.Data) {
		var ret FuseApiErrorData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuseApiError) GetDataOk() (*FuseApiErrorData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *FuseApiError) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given FuseApiErrorData and assigns it to the Data field.
func (o *FuseApiError) SetData(v FuseApiErrorData) {
	o.Data = &v
}

func (o FuseApiError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FuseApiError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["request_id"] = o.RequestId
	toSerialize["title"] = o.Title
	toSerialize["details"] = o.Details
	toSerialize["code"] = o.Code
	toSerialize["type"] = o.Type
	toSerialize["source"] = o.Source
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableFuseApiError struct {
	value *FuseApiError
	isSet bool
}

func (v NullableFuseApiError) Get() *FuseApiError {
	return v.value
}

func (v *NullableFuseApiError) Set(val *FuseApiError) {
	v.value = val
	v.isSet = true
}

func (v NullableFuseApiError) IsSet() bool {
	return v.isSet
}

func (v *NullableFuseApiError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFuseApiError(val *FuseApiError) *NullableFuseApiError {
	return &NullableFuseApiError{value: val, isSet: true}
}

func (v NullableFuseApiError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFuseApiError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


