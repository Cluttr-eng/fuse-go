/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the FinancialInstitutionLogo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinancialInstitutionLogo{}

// FinancialInstitutionLogo struct for FinancialInstitutionLogo
type FinancialInstitutionLogo struct {
	// Base64-encoded image data or URL for the image.
	Image string `json:"image"`
	// Type of the image.
	Type string `json:"type"`
	// Optional format of the image, if known.
	Format *string `json:"format,omitempty"`
}

// NewFinancialInstitutionLogo instantiates a new FinancialInstitutionLogo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialInstitutionLogo(image string, type_ string) *FinancialInstitutionLogo {
	this := FinancialInstitutionLogo{}
	this.Image = image
	this.Type = type_
	return &this
}

// NewFinancialInstitutionLogoWithDefaults instantiates a new FinancialInstitutionLogo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialInstitutionLogoWithDefaults() *FinancialInstitutionLogo {
	this := FinancialInstitutionLogo{}
	return &this
}

// GetImage returns the Image field value
func (o *FinancialInstitutionLogo) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *FinancialInstitutionLogo) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *FinancialInstitutionLogo) SetImage(v string) {
	o.Image = v
}

// GetType returns the Type field value
func (o *FinancialInstitutionLogo) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *FinancialInstitutionLogo) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *FinancialInstitutionLogo) SetType(v string) {
	o.Type = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *FinancialInstitutionLogo) GetFormat() string {
	if o == nil || IsNil(o.Format) {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialInstitutionLogo) GetFormatOk() (*string, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *FinancialInstitutionLogo) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *FinancialInstitutionLogo) SetFormat(v string) {
	o.Format = &v
}

func (o FinancialInstitutionLogo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinancialInstitutionLogo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["image"] = o.Image
	toSerialize["type"] = o.Type
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	return toSerialize, nil
}

type NullableFinancialInstitutionLogo struct {
	value *FinancialInstitutionLogo
	isSet bool
}

func (v NullableFinancialInstitutionLogo) Get() *FinancialInstitutionLogo {
	return v.value
}

func (v *NullableFinancialInstitutionLogo) Set(val *FinancialInstitutionLogo) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialInstitutionLogo) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialInstitutionLogo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialInstitutionLogo(val *FinancialInstitutionLogo) *NullableFinancialInstitutionLogo {
	return &NullableFinancialInstitutionLogo{value: val, isSet: true}
}

func (v NullableFinancialInstitutionLogo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialInstitutionLogo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


