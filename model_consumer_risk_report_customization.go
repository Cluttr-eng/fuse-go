/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConsumerRiskReportCustomization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsumerRiskReportCustomization{}

// ConsumerRiskReportCustomization struct for ConsumerRiskReportCustomization
type ConsumerRiskReportCustomization struct {
	Id string `json:"id"`
	Timeframe ConsumerRiskReportTimeFrame `json:"timeframe"`
	// The minimum allowed limit, in cents.
	MinLimit int32 `json:"min_limit"`
	// The maximum allowed limit, in cents.
	MaxLimit int32 `json:"max_limit"`
	// This parameter indicates the risk tolerance associated with spend limits. A high risk tolerance allow for higher limits, increasing both potential gains and losses. A Lower risk tolerance enforces strict limits, reducing the potential for loss but also limiting transaction volume for reliable users.
	RiskTolerance *int32 `json:"risk_tolerance,omitempty"`
}

type _ConsumerRiskReportCustomization ConsumerRiskReportCustomization

// NewConsumerRiskReportCustomization instantiates a new ConsumerRiskReportCustomization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsumerRiskReportCustomization(id string, timeframe ConsumerRiskReportTimeFrame, minLimit int32, maxLimit int32) *ConsumerRiskReportCustomization {
	this := ConsumerRiskReportCustomization{}
	this.Id = id
	this.Timeframe = timeframe
	this.MinLimit = minLimit
	this.MaxLimit = maxLimit
	return &this
}

// NewConsumerRiskReportCustomizationWithDefaults instantiates a new ConsumerRiskReportCustomization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsumerRiskReportCustomizationWithDefaults() *ConsumerRiskReportCustomization {
	this := ConsumerRiskReportCustomization{}
	return &this
}

// GetId returns the Id field value
func (o *ConsumerRiskReportCustomization) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConsumerRiskReportCustomization) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConsumerRiskReportCustomization) SetId(v string) {
	o.Id = v
}

// GetTimeframe returns the Timeframe field value
func (o *ConsumerRiskReportCustomization) GetTimeframe() ConsumerRiskReportTimeFrame {
	if o == nil {
		var ret ConsumerRiskReportTimeFrame
		return ret
	}

	return o.Timeframe
}

// GetTimeframeOk returns a tuple with the Timeframe field value
// and a boolean to check if the value has been set.
func (o *ConsumerRiskReportCustomization) GetTimeframeOk() (*ConsumerRiskReportTimeFrame, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timeframe, true
}

// SetTimeframe sets field value
func (o *ConsumerRiskReportCustomization) SetTimeframe(v ConsumerRiskReportTimeFrame) {
	o.Timeframe = v
}

// GetMinLimit returns the MinLimit field value
func (o *ConsumerRiskReportCustomization) GetMinLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinLimit
}

// GetMinLimitOk returns a tuple with the MinLimit field value
// and a boolean to check if the value has been set.
func (o *ConsumerRiskReportCustomization) GetMinLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinLimit, true
}

// SetMinLimit sets field value
func (o *ConsumerRiskReportCustomization) SetMinLimit(v int32) {
	o.MinLimit = v
}

// GetMaxLimit returns the MaxLimit field value
func (o *ConsumerRiskReportCustomization) GetMaxLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxLimit
}

// GetMaxLimitOk returns a tuple with the MaxLimit field value
// and a boolean to check if the value has been set.
func (o *ConsumerRiskReportCustomization) GetMaxLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxLimit, true
}

// SetMaxLimit sets field value
func (o *ConsumerRiskReportCustomization) SetMaxLimit(v int32) {
	o.MaxLimit = v
}

// GetRiskTolerance returns the RiskTolerance field value if set, zero value otherwise.
func (o *ConsumerRiskReportCustomization) GetRiskTolerance() int32 {
	if o == nil || IsNil(o.RiskTolerance) {
		var ret int32
		return ret
	}
	return *o.RiskTolerance
}

// GetRiskToleranceOk returns a tuple with the RiskTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsumerRiskReportCustomization) GetRiskToleranceOk() (*int32, bool) {
	if o == nil || IsNil(o.RiskTolerance) {
		return nil, false
	}
	return o.RiskTolerance, true
}

// HasRiskTolerance returns a boolean if a field has been set.
func (o *ConsumerRiskReportCustomization) HasRiskTolerance() bool {
	if o != nil && !IsNil(o.RiskTolerance) {
		return true
	}

	return false
}

// SetRiskTolerance gets a reference to the given int32 and assigns it to the RiskTolerance field.
func (o *ConsumerRiskReportCustomization) SetRiskTolerance(v int32) {
	o.RiskTolerance = &v
}

func (o ConsumerRiskReportCustomization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsumerRiskReportCustomization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["timeframe"] = o.Timeframe
	toSerialize["min_limit"] = o.MinLimit
	toSerialize["max_limit"] = o.MaxLimit
	if !IsNil(o.RiskTolerance) {
		toSerialize["risk_tolerance"] = o.RiskTolerance
	}
	return toSerialize, nil
}

func (o *ConsumerRiskReportCustomization) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"timeframe",
		"min_limit",
		"max_limit",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConsumerRiskReportCustomization := _ConsumerRiskReportCustomization{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConsumerRiskReportCustomization)

	if err != nil {
		return err
	}

	*o = ConsumerRiskReportCustomization(varConsumerRiskReportCustomization)

	return err
}

type NullableConsumerRiskReportCustomization struct {
	value *ConsumerRiskReportCustomization
	isSet bool
}

func (v NullableConsumerRiskReportCustomization) Get() *ConsumerRiskReportCustomization {
	return v.value
}

func (v *NullableConsumerRiskReportCustomization) Set(val *ConsumerRiskReportCustomization) {
	v.value = val
	v.isSet = true
}

func (v NullableConsumerRiskReportCustomization) IsSet() bool {
	return v.isSet
}

func (v *NullableConsumerRiskReportCustomization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsumerRiskReportCustomization(val *ConsumerRiskReportCustomization) *NullableConsumerRiskReportCustomization {
	return &NullableConsumerRiskReportCustomization{value: val, isSet: true}
}

func (v NullableConsumerRiskReportCustomization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsumerRiskReportCustomization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


