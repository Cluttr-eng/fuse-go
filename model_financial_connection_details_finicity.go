/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FinancialConnectionDetailsFinicity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinancialConnectionDetailsFinicity{}

// FinancialConnectionDetailsFinicity Data needed to query data from Finicity.
type FinancialConnectionDetailsFinicity struct {
	// The identifier of the customer for Finicity.
	CustomerId string `json:"customer_id"`
	// The Finicity institution login id.
	InstitutionLoginId string `json:"institution_login_id"`
}

type _FinancialConnectionDetailsFinicity FinancialConnectionDetailsFinicity

// NewFinancialConnectionDetailsFinicity instantiates a new FinancialConnectionDetailsFinicity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialConnectionDetailsFinicity(customerId string, institutionLoginId string) *FinancialConnectionDetailsFinicity {
	this := FinancialConnectionDetailsFinicity{}
	this.CustomerId = customerId
	this.InstitutionLoginId = institutionLoginId
	return &this
}

// NewFinancialConnectionDetailsFinicityWithDefaults instantiates a new FinancialConnectionDetailsFinicity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialConnectionDetailsFinicityWithDefaults() *FinancialConnectionDetailsFinicity {
	this := FinancialConnectionDetailsFinicity{}
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *FinancialConnectionDetailsFinicity) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetailsFinicity) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *FinancialConnectionDetailsFinicity) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetInstitutionLoginId returns the InstitutionLoginId field value
func (o *FinancialConnectionDetailsFinicity) GetInstitutionLoginId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstitutionLoginId
}

// GetInstitutionLoginIdOk returns a tuple with the InstitutionLoginId field value
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetailsFinicity) GetInstitutionLoginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstitutionLoginId, true
}

// SetInstitutionLoginId sets field value
func (o *FinancialConnectionDetailsFinicity) SetInstitutionLoginId(v string) {
	o.InstitutionLoginId = v
}

func (o FinancialConnectionDetailsFinicity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinancialConnectionDetailsFinicity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer_id"] = o.CustomerId
	toSerialize["institution_login_id"] = o.InstitutionLoginId
	return toSerialize, nil
}

func (o *FinancialConnectionDetailsFinicity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer_id",
		"institution_login_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFinancialConnectionDetailsFinicity := _FinancialConnectionDetailsFinicity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFinancialConnectionDetailsFinicity)

	if err != nil {
		return err
	}

	*o = FinancialConnectionDetailsFinicity(varFinancialConnectionDetailsFinicity)

	return err
}

type NullableFinancialConnectionDetailsFinicity struct {
	value *FinancialConnectionDetailsFinicity
	isSet bool
}

func (v NullableFinancialConnectionDetailsFinicity) Get() *FinancialConnectionDetailsFinicity {
	return v.value
}

func (v *NullableFinancialConnectionDetailsFinicity) Set(val *FinancialConnectionDetailsFinicity) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialConnectionDetailsFinicity) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialConnectionDetailsFinicity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialConnectionDetailsFinicity(val *FinancialConnectionDetailsFinicity) *NullableFinancialConnectionDetailsFinicity {
	return &NullableFinancialConnectionDetailsFinicity{value: val, isSet: true}
}

func (v NullableFinancialConnectionDetailsFinicity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialConnectionDetailsFinicity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


