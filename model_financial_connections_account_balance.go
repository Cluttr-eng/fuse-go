/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the FinancialConnectionsAccountBalance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinancialConnectionsAccountBalance{}

// FinancialConnectionsAccountBalance struct for FinancialConnectionsAccountBalance
type FinancialConnectionsAccountBalance struct {
	// Remote Account Id of the transaction, ie Plaid Account Id
	RemoteAccountId string `json:"remote_account_id"`
	// Amount in cents after factoring in pending balances. The format of this value is a double. For accounts with credit features, the available funds generally equal the credit limit. Some institutions may not provide an available balance calculation. If this is the case, Fuse will return a null value for the available balance. To ensure you have the most accurate information, we recommend obtaining the current balance by using 'balance.available || balance.current'.
	Available NullableFloat32 `json:"available,omitempty"`
	// Amount in cents without factoring in pending balances. The format of this value is a double.
	Current NullableFloat32 `json:"current,omitempty"`
	// The ISO-4217 currency code of the balance.
	IsoCurrencyCode NullableString `json:"iso_currency_code,omitempty"`
	// The last time the account balance was updated, represented as an ISO 8601 timestamp (YYYY-MM-DDTHH:mm:ssZ). This value may not be available for some accounts.
	LastUpdatedDate NullableString `json:"last_updated_date,omitempty"`
}

// NewFinancialConnectionsAccountBalance instantiates a new FinancialConnectionsAccountBalance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialConnectionsAccountBalance(remoteAccountId string) *FinancialConnectionsAccountBalance {
	this := FinancialConnectionsAccountBalance{}
	this.RemoteAccountId = remoteAccountId
	return &this
}

// NewFinancialConnectionsAccountBalanceWithDefaults instantiates a new FinancialConnectionsAccountBalance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialConnectionsAccountBalanceWithDefaults() *FinancialConnectionsAccountBalance {
	this := FinancialConnectionsAccountBalance{}
	return &this
}

// GetRemoteAccountId returns the RemoteAccountId field value
func (o *FinancialConnectionsAccountBalance) GetRemoteAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteAccountId
}

// GetRemoteAccountIdOk returns a tuple with the RemoteAccountId field value
// and a boolean to check if the value has been set.
func (o *FinancialConnectionsAccountBalance) GetRemoteAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteAccountId, true
}

// SetRemoteAccountId sets field value
func (o *FinancialConnectionsAccountBalance) SetRemoteAccountId(v string) {
	o.RemoteAccountId = v
}

// GetAvailable returns the Available field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FinancialConnectionsAccountBalance) GetAvailable() float32 {
	if o == nil || IsNil(o.Available.Get()) {
		var ret float32
		return ret
	}
	return *o.Available.Get()
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FinancialConnectionsAccountBalance) GetAvailableOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Available.Get(), o.Available.IsSet()
}

// HasAvailable returns a boolean if a field has been set.
func (o *FinancialConnectionsAccountBalance) HasAvailable() bool {
	if o != nil && o.Available.IsSet() {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given NullableFloat32 and assigns it to the Available field.
func (o *FinancialConnectionsAccountBalance) SetAvailable(v float32) {
	o.Available.Set(&v)
}
// SetAvailableNil sets the value for Available to be an explicit nil
func (o *FinancialConnectionsAccountBalance) SetAvailableNil() {
	o.Available.Set(nil)
}

// UnsetAvailable ensures that no value is present for Available, not even an explicit nil
func (o *FinancialConnectionsAccountBalance) UnsetAvailable() {
	o.Available.Unset()
}

// GetCurrent returns the Current field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FinancialConnectionsAccountBalance) GetCurrent() float32 {
	if o == nil || IsNil(o.Current.Get()) {
		var ret float32
		return ret
	}
	return *o.Current.Get()
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FinancialConnectionsAccountBalance) GetCurrentOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Current.Get(), o.Current.IsSet()
}

// HasCurrent returns a boolean if a field has been set.
func (o *FinancialConnectionsAccountBalance) HasCurrent() bool {
	if o != nil && o.Current.IsSet() {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given NullableFloat32 and assigns it to the Current field.
func (o *FinancialConnectionsAccountBalance) SetCurrent(v float32) {
	o.Current.Set(&v)
}
// SetCurrentNil sets the value for Current to be an explicit nil
func (o *FinancialConnectionsAccountBalance) SetCurrentNil() {
	o.Current.Set(nil)
}

// UnsetCurrent ensures that no value is present for Current, not even an explicit nil
func (o *FinancialConnectionsAccountBalance) UnsetCurrent() {
	o.Current.Unset()
}

// GetIsoCurrencyCode returns the IsoCurrencyCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FinancialConnectionsAccountBalance) GetIsoCurrencyCode() string {
	if o == nil || IsNil(o.IsoCurrencyCode.Get()) {
		var ret string
		return ret
	}
	return *o.IsoCurrencyCode.Get()
}

// GetIsoCurrencyCodeOk returns a tuple with the IsoCurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FinancialConnectionsAccountBalance) GetIsoCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsoCurrencyCode.Get(), o.IsoCurrencyCode.IsSet()
}

// HasIsoCurrencyCode returns a boolean if a field has been set.
func (o *FinancialConnectionsAccountBalance) HasIsoCurrencyCode() bool {
	if o != nil && o.IsoCurrencyCode.IsSet() {
		return true
	}

	return false
}

// SetIsoCurrencyCode gets a reference to the given NullableString and assigns it to the IsoCurrencyCode field.
func (o *FinancialConnectionsAccountBalance) SetIsoCurrencyCode(v string) {
	o.IsoCurrencyCode.Set(&v)
}
// SetIsoCurrencyCodeNil sets the value for IsoCurrencyCode to be an explicit nil
func (o *FinancialConnectionsAccountBalance) SetIsoCurrencyCodeNil() {
	o.IsoCurrencyCode.Set(nil)
}

// UnsetIsoCurrencyCode ensures that no value is present for IsoCurrencyCode, not even an explicit nil
func (o *FinancialConnectionsAccountBalance) UnsetIsoCurrencyCode() {
	o.IsoCurrencyCode.Unset()
}

// GetLastUpdatedDate returns the LastUpdatedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FinancialConnectionsAccountBalance) GetLastUpdatedDate() string {
	if o == nil || IsNil(o.LastUpdatedDate.Get()) {
		var ret string
		return ret
	}
	return *o.LastUpdatedDate.Get()
}

// GetLastUpdatedDateOk returns a tuple with the LastUpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FinancialConnectionsAccountBalance) GetLastUpdatedDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastUpdatedDate.Get(), o.LastUpdatedDate.IsSet()
}

// HasLastUpdatedDate returns a boolean if a field has been set.
func (o *FinancialConnectionsAccountBalance) HasLastUpdatedDate() bool {
	if o != nil && o.LastUpdatedDate.IsSet() {
		return true
	}

	return false
}

// SetLastUpdatedDate gets a reference to the given NullableString and assigns it to the LastUpdatedDate field.
func (o *FinancialConnectionsAccountBalance) SetLastUpdatedDate(v string) {
	o.LastUpdatedDate.Set(&v)
}
// SetLastUpdatedDateNil sets the value for LastUpdatedDate to be an explicit nil
func (o *FinancialConnectionsAccountBalance) SetLastUpdatedDateNil() {
	o.LastUpdatedDate.Set(nil)
}

// UnsetLastUpdatedDate ensures that no value is present for LastUpdatedDate, not even an explicit nil
func (o *FinancialConnectionsAccountBalance) UnsetLastUpdatedDate() {
	o.LastUpdatedDate.Unset()
}

func (o FinancialConnectionsAccountBalance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinancialConnectionsAccountBalance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["remote_account_id"] = o.RemoteAccountId
	if o.Available.IsSet() {
		toSerialize["available"] = o.Available.Get()
	}
	if o.Current.IsSet() {
		toSerialize["current"] = o.Current.Get()
	}
	if o.IsoCurrencyCode.IsSet() {
		toSerialize["iso_currency_code"] = o.IsoCurrencyCode.Get()
	}
	if o.LastUpdatedDate.IsSet() {
		toSerialize["last_updated_date"] = o.LastUpdatedDate.Get()
	}
	return toSerialize, nil
}

type NullableFinancialConnectionsAccountBalance struct {
	value *FinancialConnectionsAccountBalance
	isSet bool
}

func (v NullableFinancialConnectionsAccountBalance) Get() *FinancialConnectionsAccountBalance {
	return v.value
}

func (v *NullableFinancialConnectionsAccountBalance) Set(val *FinancialConnectionsAccountBalance) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialConnectionsAccountBalance) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialConnectionsAccountBalance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialConnectionsAccountBalance(val *FinancialConnectionsAccountBalance) *NullableFinancialConnectionsAccountBalance {
	return &NullableFinancialConnectionsAccountBalance{value: val, isSet: true}
}

func (v NullableFinancialConnectionsAccountBalance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialConnectionsAccountBalance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


