/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the EvalConsumerRiskReportResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EvalConsumerRiskReportResponse{}

// EvalConsumerRiskReportResponse struct for EvalConsumerRiskReportResponse
type EvalConsumerRiskReportResponse struct {
	// 
	MeanGrantedAboveFailedPayments *float32 `json:"mean_granted_above_failed_payments,omitempty"`
	// 
	MeanGrantedBelowFailedPayments *float32 `json:"mean_granted_below_failed_payments,omitempty"`
	// 
	MeanPredictedLimits *float32 `json:"mean_predicted_limits,omitempty"`
	// 
	MeanSuccessfulPayments *float32 `json:"mean_successful_payments,omitempty"`
}

// NewEvalConsumerRiskReportResponse instantiates a new EvalConsumerRiskReportResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvalConsumerRiskReportResponse() *EvalConsumerRiskReportResponse {
	this := EvalConsumerRiskReportResponse{}
	return &this
}

// NewEvalConsumerRiskReportResponseWithDefaults instantiates a new EvalConsumerRiskReportResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEvalConsumerRiskReportResponseWithDefaults() *EvalConsumerRiskReportResponse {
	this := EvalConsumerRiskReportResponse{}
	return &this
}

// GetMeanGrantedAboveFailedPayments returns the MeanGrantedAboveFailedPayments field value if set, zero value otherwise.
func (o *EvalConsumerRiskReportResponse) GetMeanGrantedAboveFailedPayments() float32 {
	if o == nil || IsNil(o.MeanGrantedAboveFailedPayments) {
		var ret float32
		return ret
	}
	return *o.MeanGrantedAboveFailedPayments
}

// GetMeanGrantedAboveFailedPaymentsOk returns a tuple with the MeanGrantedAboveFailedPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvalConsumerRiskReportResponse) GetMeanGrantedAboveFailedPaymentsOk() (*float32, bool) {
	if o == nil || IsNil(o.MeanGrantedAboveFailedPayments) {
		return nil, false
	}
	return o.MeanGrantedAboveFailedPayments, true
}

// HasMeanGrantedAboveFailedPayments returns a boolean if a field has been set.
func (o *EvalConsumerRiskReportResponse) HasMeanGrantedAboveFailedPayments() bool {
	if o != nil && !IsNil(o.MeanGrantedAboveFailedPayments) {
		return true
	}

	return false
}

// SetMeanGrantedAboveFailedPayments gets a reference to the given float32 and assigns it to the MeanGrantedAboveFailedPayments field.
func (o *EvalConsumerRiskReportResponse) SetMeanGrantedAboveFailedPayments(v float32) {
	o.MeanGrantedAboveFailedPayments = &v
}

// GetMeanGrantedBelowFailedPayments returns the MeanGrantedBelowFailedPayments field value if set, zero value otherwise.
func (o *EvalConsumerRiskReportResponse) GetMeanGrantedBelowFailedPayments() float32 {
	if o == nil || IsNil(o.MeanGrantedBelowFailedPayments) {
		var ret float32
		return ret
	}
	return *o.MeanGrantedBelowFailedPayments
}

// GetMeanGrantedBelowFailedPaymentsOk returns a tuple with the MeanGrantedBelowFailedPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvalConsumerRiskReportResponse) GetMeanGrantedBelowFailedPaymentsOk() (*float32, bool) {
	if o == nil || IsNil(o.MeanGrantedBelowFailedPayments) {
		return nil, false
	}
	return o.MeanGrantedBelowFailedPayments, true
}

// HasMeanGrantedBelowFailedPayments returns a boolean if a field has been set.
func (o *EvalConsumerRiskReportResponse) HasMeanGrantedBelowFailedPayments() bool {
	if o != nil && !IsNil(o.MeanGrantedBelowFailedPayments) {
		return true
	}

	return false
}

// SetMeanGrantedBelowFailedPayments gets a reference to the given float32 and assigns it to the MeanGrantedBelowFailedPayments field.
func (o *EvalConsumerRiskReportResponse) SetMeanGrantedBelowFailedPayments(v float32) {
	o.MeanGrantedBelowFailedPayments = &v
}

// GetMeanPredictedLimits returns the MeanPredictedLimits field value if set, zero value otherwise.
func (o *EvalConsumerRiskReportResponse) GetMeanPredictedLimits() float32 {
	if o == nil || IsNil(o.MeanPredictedLimits) {
		var ret float32
		return ret
	}
	return *o.MeanPredictedLimits
}

// GetMeanPredictedLimitsOk returns a tuple with the MeanPredictedLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvalConsumerRiskReportResponse) GetMeanPredictedLimitsOk() (*float32, bool) {
	if o == nil || IsNil(o.MeanPredictedLimits) {
		return nil, false
	}
	return o.MeanPredictedLimits, true
}

// HasMeanPredictedLimits returns a boolean if a field has been set.
func (o *EvalConsumerRiskReportResponse) HasMeanPredictedLimits() bool {
	if o != nil && !IsNil(o.MeanPredictedLimits) {
		return true
	}

	return false
}

// SetMeanPredictedLimits gets a reference to the given float32 and assigns it to the MeanPredictedLimits field.
func (o *EvalConsumerRiskReportResponse) SetMeanPredictedLimits(v float32) {
	o.MeanPredictedLimits = &v
}

// GetMeanSuccessfulPayments returns the MeanSuccessfulPayments field value if set, zero value otherwise.
func (o *EvalConsumerRiskReportResponse) GetMeanSuccessfulPayments() float32 {
	if o == nil || IsNil(o.MeanSuccessfulPayments) {
		var ret float32
		return ret
	}
	return *o.MeanSuccessfulPayments
}

// GetMeanSuccessfulPaymentsOk returns a tuple with the MeanSuccessfulPayments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EvalConsumerRiskReportResponse) GetMeanSuccessfulPaymentsOk() (*float32, bool) {
	if o == nil || IsNil(o.MeanSuccessfulPayments) {
		return nil, false
	}
	return o.MeanSuccessfulPayments, true
}

// HasMeanSuccessfulPayments returns a boolean if a field has been set.
func (o *EvalConsumerRiskReportResponse) HasMeanSuccessfulPayments() bool {
	if o != nil && !IsNil(o.MeanSuccessfulPayments) {
		return true
	}

	return false
}

// SetMeanSuccessfulPayments gets a reference to the given float32 and assigns it to the MeanSuccessfulPayments field.
func (o *EvalConsumerRiskReportResponse) SetMeanSuccessfulPayments(v float32) {
	o.MeanSuccessfulPayments = &v
}

func (o EvalConsumerRiskReportResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EvalConsumerRiskReportResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MeanGrantedAboveFailedPayments) {
		toSerialize["mean_granted_above_failed_payments"] = o.MeanGrantedAboveFailedPayments
	}
	if !IsNil(o.MeanGrantedBelowFailedPayments) {
		toSerialize["mean_granted_below_failed_payments"] = o.MeanGrantedBelowFailedPayments
	}
	if !IsNil(o.MeanPredictedLimits) {
		toSerialize["mean_predicted_limits"] = o.MeanPredictedLimits
	}
	if !IsNil(o.MeanSuccessfulPayments) {
		toSerialize["mean_successful_payments"] = o.MeanSuccessfulPayments
	}
	return toSerialize, nil
}

type NullableEvalConsumerRiskReportResponse struct {
	value *EvalConsumerRiskReportResponse
	isSet bool
}

func (v NullableEvalConsumerRiskReportResponse) Get() *EvalConsumerRiskReportResponse {
	return v.value
}

func (v *NullableEvalConsumerRiskReportResponse) Set(val *EvalConsumerRiskReportResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEvalConsumerRiskReportResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEvalConsumerRiskReportResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvalConsumerRiskReportResponse(val *EvalConsumerRiskReportResponse) *NullableEvalConsumerRiskReportResponse {
	return &NullableEvalConsumerRiskReportResponse{value: val, isSet: true}
}

func (v NullableEvalConsumerRiskReportResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvalConsumerRiskReportResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


