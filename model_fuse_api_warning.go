/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the FuseApiWarning type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FuseApiWarning{}

// FuseApiWarning struct for FuseApiWarning
type FuseApiWarning struct {
	Title *string `json:"title,omitempty"`
	Details *string `json:"details,omitempty"`
	Code *string `json:"code,omitempty"`
	Type *string `json:"type,omitempty"`
	Source *string `json:"source,omitempty"`
	Data *FuseApiWarningData `json:"data,omitempty"`
}

// NewFuseApiWarning instantiates a new FuseApiWarning object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFuseApiWarning() *FuseApiWarning {
	this := FuseApiWarning{}
	return &this
}

// NewFuseApiWarningWithDefaults instantiates a new FuseApiWarning object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFuseApiWarningWithDefaults() *FuseApiWarning {
	this := FuseApiWarning{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *FuseApiWarning) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuseApiWarning) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *FuseApiWarning) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *FuseApiWarning) SetTitle(v string) {
	o.Title = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *FuseApiWarning) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuseApiWarning) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *FuseApiWarning) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *FuseApiWarning) SetDetails(v string) {
	o.Details = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *FuseApiWarning) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuseApiWarning) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *FuseApiWarning) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *FuseApiWarning) SetCode(v string) {
	o.Code = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FuseApiWarning) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuseApiWarning) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FuseApiWarning) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FuseApiWarning) SetType(v string) {
	o.Type = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *FuseApiWarning) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuseApiWarning) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *FuseApiWarning) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *FuseApiWarning) SetSource(v string) {
	o.Source = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *FuseApiWarning) GetData() FuseApiWarningData {
	if o == nil || IsNil(o.Data) {
		var ret FuseApiWarningData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuseApiWarning) GetDataOk() (*FuseApiWarningData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *FuseApiWarning) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given FuseApiWarningData and assigns it to the Data field.
func (o *FuseApiWarning) SetData(v FuseApiWarningData) {
	o.Data = &v
}

func (o FuseApiWarning) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FuseApiWarning) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableFuseApiWarning struct {
	value *FuseApiWarning
	isSet bool
}

func (v NullableFuseApiWarning) Get() *FuseApiWarning {
	return v.value
}

func (v *NullableFuseApiWarning) Set(val *FuseApiWarning) {
	v.value = val
	v.isSet = true
}

func (v NullableFuseApiWarning) IsSet() bool {
	return v.isSet
}

func (v *NullableFuseApiWarning) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFuseApiWarning(val *FuseApiWarning) *NullableFuseApiWarning {
	return &NullableFuseApiWarning{value: val, isSet: true}
}

func (v NullableFuseApiWarning) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFuseApiWarning) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


