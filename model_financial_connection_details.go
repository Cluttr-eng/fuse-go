/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FinancialConnectionDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FinancialConnectionDetails{}

// FinancialConnectionDetails struct for FinancialConnectionDetails
type FinancialConnectionDetails struct {
	// The fuse financial connection id.
	Id string `json:"id"`
	// Connection status of the current financial connection
	ConnectionStatus string `json:"connection_status"`
	// Last time the connection status was updated in ISO-8601 format.
	ConnectionStatusUpdatedAt string `json:"connection_status_updated_at"`
	// Whether this is an oauth connection
	IsOauth bool `json:"is_oauth"`
	Aggregator Aggregator `json:"aggregator"`
	Plaid *FinancialConnectionDetailsPlaid `json:"plaid,omitempty"`
	Teller *FinancialConnectionDetailsTeller `json:"teller,omitempty"`
	Mx *FinancialConnectionDetailsMx `json:"mx,omitempty"`
	Snaptrade *FinancialConnectionDetailsSnaptrade `json:"snaptrade,omitempty"`
	Flinks *FinancialConnectionDetailsFlinks `json:"flinks,omitempty"`
	Mono *FinancialConnectionDetailsMono `json:"mono,omitempty"`
	Truelayer *FinancialConnectionDetailsTruelayer `json:"truelayer,omitempty"`
	Finverse *FinancialConnectionDetailsFinverse `json:"finverse,omitempty"`
	Basiq *FinancialConnectionDetailsBasiq `json:"basiq,omitempty"`
	Belvo *FinancialConnectionDetailsBelvo `json:"belvo,omitempty"`
	Finicity *FinancialConnectionDetailsFinicity `json:"finicity,omitempty"`
	Akoya *FinancialConnectionDetailsAkoya `json:"akoya,omitempty"`
	Saltedge *FinancialConnectionDetailsSaltedge `json:"saltedge,omitempty"`
	Sophtron *FinancialConnectionDetailsSophtron `json:"sophtron,omitempty"`
}

type _FinancialConnectionDetails FinancialConnectionDetails

// NewFinancialConnectionDetails instantiates a new FinancialConnectionDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFinancialConnectionDetails(id string, connectionStatus string, connectionStatusUpdatedAt string, isOauth bool, aggregator Aggregator) *FinancialConnectionDetails {
	this := FinancialConnectionDetails{}
	this.Id = id
	this.ConnectionStatus = connectionStatus
	this.ConnectionStatusUpdatedAt = connectionStatusUpdatedAt
	this.IsOauth = isOauth
	this.Aggregator = aggregator
	return &this
}

// NewFinancialConnectionDetailsWithDefaults instantiates a new FinancialConnectionDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFinancialConnectionDetailsWithDefaults() *FinancialConnectionDetails {
	this := FinancialConnectionDetails{}
	return &this
}

// GetId returns the Id field value
func (o *FinancialConnectionDetails) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FinancialConnectionDetails) SetId(v string) {
	o.Id = v
}

// GetConnectionStatus returns the ConnectionStatus field value
func (o *FinancialConnectionDetails) GetConnectionStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionStatus
}

// GetConnectionStatusOk returns a tuple with the ConnectionStatus field value
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetConnectionStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionStatus, true
}

// SetConnectionStatus sets field value
func (o *FinancialConnectionDetails) SetConnectionStatus(v string) {
	o.ConnectionStatus = v
}

// GetConnectionStatusUpdatedAt returns the ConnectionStatusUpdatedAt field value
func (o *FinancialConnectionDetails) GetConnectionStatusUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionStatusUpdatedAt
}

// GetConnectionStatusUpdatedAtOk returns a tuple with the ConnectionStatusUpdatedAt field value
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetConnectionStatusUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionStatusUpdatedAt, true
}

// SetConnectionStatusUpdatedAt sets field value
func (o *FinancialConnectionDetails) SetConnectionStatusUpdatedAt(v string) {
	o.ConnectionStatusUpdatedAt = v
}

// GetIsOauth returns the IsOauth field value
func (o *FinancialConnectionDetails) GetIsOauth() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOauth
}

// GetIsOauthOk returns a tuple with the IsOauth field value
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetIsOauthOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOauth, true
}

// SetIsOauth sets field value
func (o *FinancialConnectionDetails) SetIsOauth(v bool) {
	o.IsOauth = v
}

// GetAggregator returns the Aggregator field value
func (o *FinancialConnectionDetails) GetAggregator() Aggregator {
	if o == nil {
		var ret Aggregator
		return ret
	}

	return o.Aggregator
}

// GetAggregatorOk returns a tuple with the Aggregator field value
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetAggregatorOk() (*Aggregator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aggregator, true
}

// SetAggregator sets field value
func (o *FinancialConnectionDetails) SetAggregator(v Aggregator) {
	o.Aggregator = v
}

// GetPlaid returns the Plaid field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetPlaid() FinancialConnectionDetailsPlaid {
	if o == nil || IsNil(o.Plaid) {
		var ret FinancialConnectionDetailsPlaid
		return ret
	}
	return *o.Plaid
}

// GetPlaidOk returns a tuple with the Plaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetPlaidOk() (*FinancialConnectionDetailsPlaid, bool) {
	if o == nil || IsNil(o.Plaid) {
		return nil, false
	}
	return o.Plaid, true
}

// HasPlaid returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasPlaid() bool {
	if o != nil && !IsNil(o.Plaid) {
		return true
	}

	return false
}

// SetPlaid gets a reference to the given FinancialConnectionDetailsPlaid and assigns it to the Plaid field.
func (o *FinancialConnectionDetails) SetPlaid(v FinancialConnectionDetailsPlaid) {
	o.Plaid = &v
}

// GetTeller returns the Teller field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetTeller() FinancialConnectionDetailsTeller {
	if o == nil || IsNil(o.Teller) {
		var ret FinancialConnectionDetailsTeller
		return ret
	}
	return *o.Teller
}

// GetTellerOk returns a tuple with the Teller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetTellerOk() (*FinancialConnectionDetailsTeller, bool) {
	if o == nil || IsNil(o.Teller) {
		return nil, false
	}
	return o.Teller, true
}

// HasTeller returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasTeller() bool {
	if o != nil && !IsNil(o.Teller) {
		return true
	}

	return false
}

// SetTeller gets a reference to the given FinancialConnectionDetailsTeller and assigns it to the Teller field.
func (o *FinancialConnectionDetails) SetTeller(v FinancialConnectionDetailsTeller) {
	o.Teller = &v
}

// GetMx returns the Mx field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetMx() FinancialConnectionDetailsMx {
	if o == nil || IsNil(o.Mx) {
		var ret FinancialConnectionDetailsMx
		return ret
	}
	return *o.Mx
}

// GetMxOk returns a tuple with the Mx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetMxOk() (*FinancialConnectionDetailsMx, bool) {
	if o == nil || IsNil(o.Mx) {
		return nil, false
	}
	return o.Mx, true
}

// HasMx returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasMx() bool {
	if o != nil && !IsNil(o.Mx) {
		return true
	}

	return false
}

// SetMx gets a reference to the given FinancialConnectionDetailsMx and assigns it to the Mx field.
func (o *FinancialConnectionDetails) SetMx(v FinancialConnectionDetailsMx) {
	o.Mx = &v
}

// GetSnaptrade returns the Snaptrade field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetSnaptrade() FinancialConnectionDetailsSnaptrade {
	if o == nil || IsNil(o.Snaptrade) {
		var ret FinancialConnectionDetailsSnaptrade
		return ret
	}
	return *o.Snaptrade
}

// GetSnaptradeOk returns a tuple with the Snaptrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetSnaptradeOk() (*FinancialConnectionDetailsSnaptrade, bool) {
	if o == nil || IsNil(o.Snaptrade) {
		return nil, false
	}
	return o.Snaptrade, true
}

// HasSnaptrade returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasSnaptrade() bool {
	if o != nil && !IsNil(o.Snaptrade) {
		return true
	}

	return false
}

// SetSnaptrade gets a reference to the given FinancialConnectionDetailsSnaptrade and assigns it to the Snaptrade field.
func (o *FinancialConnectionDetails) SetSnaptrade(v FinancialConnectionDetailsSnaptrade) {
	o.Snaptrade = &v
}

// GetFlinks returns the Flinks field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetFlinks() FinancialConnectionDetailsFlinks {
	if o == nil || IsNil(o.Flinks) {
		var ret FinancialConnectionDetailsFlinks
		return ret
	}
	return *o.Flinks
}

// GetFlinksOk returns a tuple with the Flinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetFlinksOk() (*FinancialConnectionDetailsFlinks, bool) {
	if o == nil || IsNil(o.Flinks) {
		return nil, false
	}
	return o.Flinks, true
}

// HasFlinks returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasFlinks() bool {
	if o != nil && !IsNil(o.Flinks) {
		return true
	}

	return false
}

// SetFlinks gets a reference to the given FinancialConnectionDetailsFlinks and assigns it to the Flinks field.
func (o *FinancialConnectionDetails) SetFlinks(v FinancialConnectionDetailsFlinks) {
	o.Flinks = &v
}

// GetMono returns the Mono field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetMono() FinancialConnectionDetailsMono {
	if o == nil || IsNil(o.Mono) {
		var ret FinancialConnectionDetailsMono
		return ret
	}
	return *o.Mono
}

// GetMonoOk returns a tuple with the Mono field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetMonoOk() (*FinancialConnectionDetailsMono, bool) {
	if o == nil || IsNil(o.Mono) {
		return nil, false
	}
	return o.Mono, true
}

// HasMono returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasMono() bool {
	if o != nil && !IsNil(o.Mono) {
		return true
	}

	return false
}

// SetMono gets a reference to the given FinancialConnectionDetailsMono and assigns it to the Mono field.
func (o *FinancialConnectionDetails) SetMono(v FinancialConnectionDetailsMono) {
	o.Mono = &v
}

// GetTruelayer returns the Truelayer field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetTruelayer() FinancialConnectionDetailsTruelayer {
	if o == nil || IsNil(o.Truelayer) {
		var ret FinancialConnectionDetailsTruelayer
		return ret
	}
	return *o.Truelayer
}

// GetTruelayerOk returns a tuple with the Truelayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetTruelayerOk() (*FinancialConnectionDetailsTruelayer, bool) {
	if o == nil || IsNil(o.Truelayer) {
		return nil, false
	}
	return o.Truelayer, true
}

// HasTruelayer returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasTruelayer() bool {
	if o != nil && !IsNil(o.Truelayer) {
		return true
	}

	return false
}

// SetTruelayer gets a reference to the given FinancialConnectionDetailsTruelayer and assigns it to the Truelayer field.
func (o *FinancialConnectionDetails) SetTruelayer(v FinancialConnectionDetailsTruelayer) {
	o.Truelayer = &v
}

// GetFinverse returns the Finverse field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetFinverse() FinancialConnectionDetailsFinverse {
	if o == nil || IsNil(o.Finverse) {
		var ret FinancialConnectionDetailsFinverse
		return ret
	}
	return *o.Finverse
}

// GetFinverseOk returns a tuple with the Finverse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetFinverseOk() (*FinancialConnectionDetailsFinverse, bool) {
	if o == nil || IsNil(o.Finverse) {
		return nil, false
	}
	return o.Finverse, true
}

// HasFinverse returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasFinverse() bool {
	if o != nil && !IsNil(o.Finverse) {
		return true
	}

	return false
}

// SetFinverse gets a reference to the given FinancialConnectionDetailsFinverse and assigns it to the Finverse field.
func (o *FinancialConnectionDetails) SetFinverse(v FinancialConnectionDetailsFinverse) {
	o.Finverse = &v
}

// GetBasiq returns the Basiq field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetBasiq() FinancialConnectionDetailsBasiq {
	if o == nil || IsNil(o.Basiq) {
		var ret FinancialConnectionDetailsBasiq
		return ret
	}
	return *o.Basiq
}

// GetBasiqOk returns a tuple with the Basiq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetBasiqOk() (*FinancialConnectionDetailsBasiq, bool) {
	if o == nil || IsNil(o.Basiq) {
		return nil, false
	}
	return o.Basiq, true
}

// HasBasiq returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasBasiq() bool {
	if o != nil && !IsNil(o.Basiq) {
		return true
	}

	return false
}

// SetBasiq gets a reference to the given FinancialConnectionDetailsBasiq and assigns it to the Basiq field.
func (o *FinancialConnectionDetails) SetBasiq(v FinancialConnectionDetailsBasiq) {
	o.Basiq = &v
}

// GetBelvo returns the Belvo field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetBelvo() FinancialConnectionDetailsBelvo {
	if o == nil || IsNil(o.Belvo) {
		var ret FinancialConnectionDetailsBelvo
		return ret
	}
	return *o.Belvo
}

// GetBelvoOk returns a tuple with the Belvo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetBelvoOk() (*FinancialConnectionDetailsBelvo, bool) {
	if o == nil || IsNil(o.Belvo) {
		return nil, false
	}
	return o.Belvo, true
}

// HasBelvo returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasBelvo() bool {
	if o != nil && !IsNil(o.Belvo) {
		return true
	}

	return false
}

// SetBelvo gets a reference to the given FinancialConnectionDetailsBelvo and assigns it to the Belvo field.
func (o *FinancialConnectionDetails) SetBelvo(v FinancialConnectionDetailsBelvo) {
	o.Belvo = &v
}

// GetFinicity returns the Finicity field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetFinicity() FinancialConnectionDetailsFinicity {
	if o == nil || IsNil(o.Finicity) {
		var ret FinancialConnectionDetailsFinicity
		return ret
	}
	return *o.Finicity
}

// GetFinicityOk returns a tuple with the Finicity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetFinicityOk() (*FinancialConnectionDetailsFinicity, bool) {
	if o == nil || IsNil(o.Finicity) {
		return nil, false
	}
	return o.Finicity, true
}

// HasFinicity returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasFinicity() bool {
	if o != nil && !IsNil(o.Finicity) {
		return true
	}

	return false
}

// SetFinicity gets a reference to the given FinancialConnectionDetailsFinicity and assigns it to the Finicity field.
func (o *FinancialConnectionDetails) SetFinicity(v FinancialConnectionDetailsFinicity) {
	o.Finicity = &v
}

// GetAkoya returns the Akoya field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetAkoya() FinancialConnectionDetailsAkoya {
	if o == nil || IsNil(o.Akoya) {
		var ret FinancialConnectionDetailsAkoya
		return ret
	}
	return *o.Akoya
}

// GetAkoyaOk returns a tuple with the Akoya field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetAkoyaOk() (*FinancialConnectionDetailsAkoya, bool) {
	if o == nil || IsNil(o.Akoya) {
		return nil, false
	}
	return o.Akoya, true
}

// HasAkoya returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasAkoya() bool {
	if o != nil && !IsNil(o.Akoya) {
		return true
	}

	return false
}

// SetAkoya gets a reference to the given FinancialConnectionDetailsAkoya and assigns it to the Akoya field.
func (o *FinancialConnectionDetails) SetAkoya(v FinancialConnectionDetailsAkoya) {
	o.Akoya = &v
}

// GetSaltedge returns the Saltedge field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetSaltedge() FinancialConnectionDetailsSaltedge {
	if o == nil || IsNil(o.Saltedge) {
		var ret FinancialConnectionDetailsSaltedge
		return ret
	}
	return *o.Saltedge
}

// GetSaltedgeOk returns a tuple with the Saltedge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetSaltedgeOk() (*FinancialConnectionDetailsSaltedge, bool) {
	if o == nil || IsNil(o.Saltedge) {
		return nil, false
	}
	return o.Saltedge, true
}

// HasSaltedge returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasSaltedge() bool {
	if o != nil && !IsNil(o.Saltedge) {
		return true
	}

	return false
}

// SetSaltedge gets a reference to the given FinancialConnectionDetailsSaltedge and assigns it to the Saltedge field.
func (o *FinancialConnectionDetails) SetSaltedge(v FinancialConnectionDetailsSaltedge) {
	o.Saltedge = &v
}

// GetSophtron returns the Sophtron field value if set, zero value otherwise.
func (o *FinancialConnectionDetails) GetSophtron() FinancialConnectionDetailsSophtron {
	if o == nil || IsNil(o.Sophtron) {
		var ret FinancialConnectionDetailsSophtron
		return ret
	}
	return *o.Sophtron
}

// GetSophtronOk returns a tuple with the Sophtron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FinancialConnectionDetails) GetSophtronOk() (*FinancialConnectionDetailsSophtron, bool) {
	if o == nil || IsNil(o.Sophtron) {
		return nil, false
	}
	return o.Sophtron, true
}

// HasSophtron returns a boolean if a field has been set.
func (o *FinancialConnectionDetails) HasSophtron() bool {
	if o != nil && !IsNil(o.Sophtron) {
		return true
	}

	return false
}

// SetSophtron gets a reference to the given FinancialConnectionDetailsSophtron and assigns it to the Sophtron field.
func (o *FinancialConnectionDetails) SetSophtron(v FinancialConnectionDetailsSophtron) {
	o.Sophtron = &v
}

func (o FinancialConnectionDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FinancialConnectionDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["connection_status"] = o.ConnectionStatus
	toSerialize["connection_status_updated_at"] = o.ConnectionStatusUpdatedAt
	toSerialize["is_oauth"] = o.IsOauth
	toSerialize["aggregator"] = o.Aggregator
	if !IsNil(o.Plaid) {
		toSerialize["plaid"] = o.Plaid
	}
	if !IsNil(o.Teller) {
		toSerialize["teller"] = o.Teller
	}
	if !IsNil(o.Mx) {
		toSerialize["mx"] = o.Mx
	}
	if !IsNil(o.Snaptrade) {
		toSerialize["snaptrade"] = o.Snaptrade
	}
	if !IsNil(o.Flinks) {
		toSerialize["flinks"] = o.Flinks
	}
	if !IsNil(o.Mono) {
		toSerialize["mono"] = o.Mono
	}
	if !IsNil(o.Truelayer) {
		toSerialize["truelayer"] = o.Truelayer
	}
	if !IsNil(o.Finverse) {
		toSerialize["finverse"] = o.Finverse
	}
	if !IsNil(o.Basiq) {
		toSerialize["basiq"] = o.Basiq
	}
	if !IsNil(o.Belvo) {
		toSerialize["belvo"] = o.Belvo
	}
	if !IsNil(o.Finicity) {
		toSerialize["finicity"] = o.Finicity
	}
	if !IsNil(o.Akoya) {
		toSerialize["akoya"] = o.Akoya
	}
	if !IsNil(o.Saltedge) {
		toSerialize["saltedge"] = o.Saltedge
	}
	if !IsNil(o.Sophtron) {
		toSerialize["sophtron"] = o.Sophtron
	}
	return toSerialize, nil
}

func (o *FinancialConnectionDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"connection_status",
		"connection_status_updated_at",
		"is_oauth",
		"aggregator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFinancialConnectionDetails := _FinancialConnectionDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFinancialConnectionDetails)

	if err != nil {
		return err
	}

	*o = FinancialConnectionDetails(varFinancialConnectionDetails)

	return err
}

type NullableFinancialConnectionDetails struct {
	value *FinancialConnectionDetails
	isSet bool
}

func (v NullableFinancialConnectionDetails) Get() *FinancialConnectionDetails {
	return v.value
}

func (v *NullableFinancialConnectionDetails) Set(val *FinancialConnectionDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableFinancialConnectionDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableFinancialConnectionDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFinancialConnectionDetails(val *FinancialConnectionDetails) *NullableFinancialConnectionDetails {
	return &NullableFinancialConnectionDetails{value: val, isSet: true}
}

func (v NullableFinancialConnectionDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFinancialConnectionDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


