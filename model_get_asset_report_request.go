/*
Fuse

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fuse

import (
	"encoding/json"
)

// checks if the GetAssetReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAssetReportRequest{}

// GetAssetReportRequest struct for GetAssetReportRequest
type GetAssetReportRequest struct {
	// Access fuse token corresponding to the financial account to be refresh the Asset Report for.
	AccessToken string `json:"access_token"`
	// The token associated with the Asset Report to retrieve.
	AssetReportToken string `json:"asset_report_token"`
}

// NewGetAssetReportRequest instantiates a new GetAssetReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAssetReportRequest(accessToken string, assetReportToken string) *GetAssetReportRequest {
	this := GetAssetReportRequest{}
	this.AccessToken = accessToken
	this.AssetReportToken = assetReportToken
	return &this
}

// NewGetAssetReportRequestWithDefaults instantiates a new GetAssetReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAssetReportRequestWithDefaults() *GetAssetReportRequest {
	this := GetAssetReportRequest{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *GetAssetReportRequest) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *GetAssetReportRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *GetAssetReportRequest) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetAssetReportToken returns the AssetReportToken field value
func (o *GetAssetReportRequest) GetAssetReportToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetReportToken
}

// GetAssetReportTokenOk returns a tuple with the AssetReportToken field value
// and a boolean to check if the value has been set.
func (o *GetAssetReportRequest) GetAssetReportTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetReportToken, true
}

// SetAssetReportToken sets field value
func (o *GetAssetReportRequest) SetAssetReportToken(v string) {
	o.AssetReportToken = v
}

func (o GetAssetReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAssetReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["access_token"] = o.AccessToken
	toSerialize["asset_report_token"] = o.AssetReportToken
	return toSerialize, nil
}

type NullableGetAssetReportRequest struct {
	value *GetAssetReportRequest
	isSet bool
}

func (v NullableGetAssetReportRequest) Get() *GetAssetReportRequest {
	return v.value
}

func (v *NullableGetAssetReportRequest) Set(val *GetAssetReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAssetReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAssetReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAssetReportRequest(val *GetAssetReportRequest) *NullableGetAssetReportRequest {
	return &NullableGetAssetReportRequest{value: val, isSet: true}
}

func (v NullableGetAssetReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAssetReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


